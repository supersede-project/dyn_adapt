package eu.supersede.dynadapt.atos.queries

import "http://www.eclipse.org/uml2/5.0.0/UML"

pattern nodes (node, name){
	Node.name (node, name);
}

pattern nodeArtifacts (node, artifact){
	Node.nestedClassifier (node, artifact);
	Artifact.name (artifact, _name);
}

pattern artifactManifestations (artifact, manifestationTarget){
	find nodeArtifacts(_, artifact);
	Artifact.manifestation (artifact, manifestation);
	Manifestation.supplier (manifestation, manifestationTarget);
}

pattern instanceSpecificationsAsManifestationsOfNodeArtifacts(artifact, instance){
	find artifactManifestations(artifact, instance);
	InstanceSpecification (instance);
}

pattern services (service){
	find nodeArtifacts(_, service);
}

pattern serviceInstances (service, instance){
	find artifactManifestations(service, instance);
}

pattern configurableServiceInstances (service, instance){
	find instanceSpecificationsAsManifestationsOfNodeArtifacts(service, instance);
}

pattern serviceConfigurations (service, configuration){
	find instanceSpecificationsAsManifestationsOfNodeArtifacts(_, service);
	InstanceSpecification.slot (service, slot);
	Slot.value (slot, instance);
	Slot.definingFeature (slot, feature);
	Property.name (feature, featureName);
	InstanceValue.instance (instance, configuration);
	check (
		featureName == "conf"
	);
}

pattern CMSConfigurationInstances (configuration){
	find instanceSpecificationsAsManifestationsOfNodeArtifacts(_, service);
	InstanceSpecification.slot (service, slot);
	Slot.value (slot, instance);
	InstanceValue.type (instance, type);
	InstanceValue.instance (instance, configuration);
	Class (type);
	Class.name (type, name);
	check (
		name.equals("CMS_Configuration")
	);
}

pattern maxThreadValuesInCMSConfigurations (configuration, name, value){
	find CMSConfigurationInstances(configuration);
	InstanceSpecification.slot (configuration, slot);
	Slot.definingFeature (slot, feature);
	Property.name (feature, name);
	Slot.value (slot, integer);
	LiteralInteger.value (integer, value);
	check (
		name.equals("max_threads")
	);
}

