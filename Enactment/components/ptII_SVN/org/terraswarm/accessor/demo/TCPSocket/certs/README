# Commands for creating certificates for CA, Server, and Client
# Author: Hokeun Kim (hokeunkim@eecs.berkeley.edu)

# add -aes128 option after genrsa command for certificates with passwords

# steps:
# (1) Create RSA keys
# (2) Generate CSR (certificate signing request)
# (3) Create certificate by signing with CA's private key
# (4) Check subject and issuer (CA)
# (5) Create PKCS #12 file using the certificate and private key
# (6) Check inside of PKCS #12 file

# self-signed certificate for CA (to specify validity period, use -days option, default is 30 days)

openssl genrsa -out CAKey.pem 2048
openssl req -new -key CAKey.pem -sha256 -out CAReq.pem
openssl x509 -req -in CAReq.pem -sha256 -extensions v3_ca -signkey CAKey.pem -out CACert.pem // -days 3650

openssl x509 -subject -issuer -noout -in CACert.pem

# certificate for server

openssl genrsa -out ServerKey.pem 2048
openssl req -new -key ServerKey.pem -sha256 -out ServerReq.pem
openssl x509 -req -in ServerReq.pem -sha256 -extensions usr_cert -CA CACert.pem -CAkey CAKey.pem -CAcreateserial -out ServerCert.pem

openssl x509 -subject -issuer -noout -in ServerCert.pem

openssl pkcs12 -export -out Server.pfx -inkey ServerKey.pem -in ServerCert.pem -password pass:asdf
openssl pkcs12 -in Server.pfx

# certificate for client

openssl genrsa -out ClientKey.pem 2048
openssl req -new -key ClientKey.pem -sha256 -out ClientReq.pem
openssl x509 -req -in ClientReq.pem -sha256 -extensions usr_cert -CA CACert.pem -CAkey CAKey.pem -CAcreateserial -out ClientCert.pem

openssl x509 -subject -issuer -noout -in ClientCert.pem

openssl pkcs12 -export -out Client.pfx -inkey ClientKey.pem -in ClientCert.pem -password pass:asdf
openssl pkcs12 -in Client.pfx

# To extract certificate from pfx & check validity period

openssl pkcs12 -in Server.pfx -out ServerCert.pem
openssl x509 -in ServerCert.pem -noout -enddate
