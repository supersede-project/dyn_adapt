<!-- $Id: main.htm 70349 2014-10-12 22:45:57Z cxh $ -->
<html>
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
    <title>Ptango</title>
    <link href="../../../../doc/default.css" rel="stylesheet" type="text/css">
  </head>
  <body>
    <h1>Ptango</h1>
    <p>Ptango is a project between Bosch and UC Berkeley that involves the
<a href="http://en.wikipedia.org/wiki/Internet_of_Things#in_browser" target="_top">Internet of Things (IoT)</a>.</p>

<p>The Internet of Things is the idea that everyday objects are
uniquely addressable and have a representation in a structure similar
to the Internet.</p>

<p> Comparing and contrasting IoT with Cyber-physical Systems (CPS)
is useful. The key thing with CPS is the interaction between the dynamics
  of the physical world and the dynamics of software and networks. The
  focus of IoT is on the information flow between physical devices and
  network services.  In the
  <a href="http://cyberphysicalsystems.org#in_browser" target="_top">Cyber-Physical Systems Concept Map</a>,
IoT overlaps with wireless sensing and actuating, though IoT is not necessarily wireless.</p> 

<p>The name "Ptango" refers to the fact that with the Internet of
Things, it takes <b>more</b> than two to tango.</p>

<p>The research goal of Ptango is to invent a Model of Computation
(MoC) for the Internet of Things that assigns operational semantics to
the composition of Things.</p>

<p>Applications and features of interest include:
<ul>
  <li>Building control/home automation</li>
  <li>Uniform device configurability</li>
  <li>Grouping/multicast/delegated control</li>
  <li>Data location transparency</li>
  <li>Audit trails</li>
</ul>

<p>Ptango is
using <a href="http://en.wikipedia.org/wiki/Restful#in_browser" target="_top">Representational
state transfer (RESTful)</a> interfaces like http, which is stateless,
where all the state is carried in the request and reply.  Via RESTful
interfaces, our work is focusing on a subset of IoT known as the
<a href="http://en.wikipedia.org/wiki/Web_of_Things#in_browser" target="_top">Web of Things</a>.
We are using <a href="http://ptolemy.eecs.berkeley.edu/ptolemyII#in_browser" target="_top">Ptolemy II</a>
as a rapid prototyping laboratory
to model systems that combine cloud services, wireless sensor networks
and handheld interfaces.  We use Ptolemy II to build systems by mixing
and matching models of computation such
as <a href="http://ptolemy.org/ptera/#in_browser" target="_top">Ptera</a>,
Discrete Event, Modal Models and Synchronous Dataflow.</p>

<p>In particular, Ptango is to address problems in bidirectional
connectivity, type compatibility and security.</p>

<p>We have made inroads in the type compatibility area.  Here, the
problem is that Internet data sources are unreliably and subject to
change.  For example, a data source that provides temperature data
commonly uses <a href="http://en.wikipedia.org/wiki/JSON#in_browser" target="_top">JavaScript
Object Notation (JSON)</a>.  JSON represets data in keyname/value
pairs.  There are several problems with reading JSON data:</p>

<ol>
  <li>The layout of the fields and their types is not known until the first set of JSON values are read.
    This makes it difficult to design a type-safe system.</li>
  <li>A data source such as a sensor can be unavailable for a period of time.</li>  
  <li>The types of a JSON request can change over time as hardware is upgraded or replaced.
    For example, what is being measured, where it is physically being measured and the units
    can all change.</li>
</ol>

<p>We are in the process of updating the Ptolemy II type system so
that type constraints are dependent on how the data are used, rather
than artificially making assumptions about the expected data types.
This is accomplished by performing upstream type inference, which is
maximally permissive.  Adding upstream constraints may change type
resolution for some models, so we will make it possible to disable
this new feature.</p>

<p>The effect of the type issue and other issues very much depends on
how the data are used in the model.  For example, with temperature, if
data are missing, possible reactions are:</p>

<ul>
  <li>Stop the execution of the model and throw a Java Exception that is handled by the system.</li>
  <li>Throw what we call a "model error" (See <a href="http://chess.eecs.berkeley.edu/ptexternal/src/ptII/doc/codeDoc/ptolemy/kernel/util/ModelErrorHandler.html#in_browser" target="_top">ModelErrorHandler</a>) and possibly handle the exception further up the modeling
    hierarchy.</li>
  <li>Use the last value read.  For example, if temperature is being read every minute,
    then missing 4 minutes of data might be acceptable.
  <li>Stall execution of the model until the data appears or a timeout period expires.  
  <li>Produce a <a href="../../../../doc/expressions.pdf#in_browser" target="_top">Nil token</a>, indicating that there is missing data.  Operations on Ptolemy II
    tokens are defined to handle nil tokens, for example adding a number to a nil token
    produces a nil token.  However, an actor could be defined that would average data that
    possibly included nil tokens and produced an average and a confidence interval.
</ul>

<p>Presumably, there are other possibilities as well.  We are
currently exploring
using <a href="http://ptolemy.org/ptera/#in_browser" target="_top">Ptera</a> to help model
developers define and select the appropriate polices.</p>

<p>Another area of interest to Ptango is
the <a href="http://swarmlab.eecs.berkeley.edu/#in_browser" target="_top">SWARM Lab</a>. The
SWARM Lab home page says "The Swarm Lab seeks to foster the creation and distribution
of exciting applications of large swarms of sensors and actuators
through the adoption of an open and universal platform."  
Swarm-OS is envisioned to be a distributed operating system that
allows uniform access to all networked sensors and actuators.  Swarm-OS
would engage in opportunistic discovery and interaction of sensors
and actuators instead of being directly routed through the Internet.
In particular, energy efficiency is key with Swarm-OS, so SwarmOS must
avoid heavy-weight HTTP-based RESTful stack and exploit energy-efficient
features of densely populated environments like mesh networks.</p>

<p>We see the focus of Swarm-OS as being lower than the focus of Ptango.
A good place for Ptango and Swarm-OS to interact would be for the
Ptango group to help define the model of computation (MoC) for
Swarm-OS.  The Ptango project also sees some nice use cases from a
modeling perspective in the SWARM Lab research.</p>
  </body>
</html>
