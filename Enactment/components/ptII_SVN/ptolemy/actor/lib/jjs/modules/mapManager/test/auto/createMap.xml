<?xml version="1.0" standalone="no"?>
<!DOCTYPE entity PUBLIC "-//UC Berkeley//DTD MoML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/MoML_1.dtd">
<entity name="createMap" class="ptolemy.actor.TypedCompositeActor">
    <property name="_createdBy" class="ptolemy.kernel.attributes.VersionAttribute" value="11.0.devel">
    </property>
    <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={0, 239, 934, 634}, maximized=false}">
    </property>
    <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[700, 524]">
    </property>
    <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="0.8000000000000004">
    </property>
    <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{339.99999999999994, 252.00000000000017}">
    </property>
    <property name="DE Director" class="ptolemy.domains.de.kernel.DEDirector">
        <property name="stopWhenQueueIsEmpty" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{-5, -20}">
        </property>
    </property>
    <entity name="JavaScript" class="ptolemy.actor.lib.jjs.JavaScript">
        <property name="script" class="ptolemy.actor.parameters.PortParameter" value="exports.initialize = function(){&#10;&#10;var mapManager = require('mapManager');&#10;&#10;var myCoords = new mapManager.CoordinateSystem(&quot;Joey&quot;);&#10;var yourCoords = new mapManager.CoordinateSystem(&quot;Sally&quot;);&#10;var myMap = new mapManager.Map(&quot;myMapName&quot; , mapManager.SpaceTypeEnum.EUCLIDEAN, myCoords);&#10;var yourMap = new mapManager.Map(&quot;yourMapName&quot;, mapManager.SpaceTypeEnum.TOPOLOGICAL, yourCoords);&#10;var badMap = new mapManager.Map(&quot;badMapName&quot;, mapManager.SpaceTypeEnum.EUCLIDEAN, myCoords);&#10;&#10;this.send(&quot;output&quot;, &quot;Registering myMap, should print true&quot;);&#10;this.send(&quot;output&quot;, mapManager.registerMap(myMap));&#10;this.send(&quot;output&quot;, &quot;Registering myMap again, should print false&quot;);&#10;this.send(&quot;output&quot;, mapManager.registerMap(myMap));&#10;&#10;this.send(&quot;output&quot;, &quot;Registering yourMap, should print true&quot;);&#10;this.send(&quot;output&quot;, mapManager.registerMap(yourMap));&#10;&#10;this.send(&quot;output&quot;, &quot;Printing maps. badMap is not registered, should not be printed.&quot;);&#10;this.send(&quot;output&quot;, mapManager.mapsToString());&#10;&#10;this.send(&quot;output&quot;, &quot;Creating and registering sampleEntity&quot;);&#10;var sampleEntity = new mapManager.Entity(&quot;sampleEntity&quot;);&#10;mapManager.registerEntity(sampleEntity);&#10;&#10;this.send(&quot;output&quot;, &quot;Attempting to add sampleEntity to myMap (should print true)&quot;);&#10;this.send(&quot;output&quot;,  myMap.addEntity(sampleEntity));&#10;&#10;this.send(&quot;output&quot;, &quot;Attempting to add sampleEntity to badMap (should print exception)&quot;);&#10;&#10;try{&#10;	badMap.addEntity(sampleEntity);&#10;	this.send(&quot;output&quot;, &quot;Test failure, this line should not execute :-(&quot;);&#10;} catch(e){&#10;	this.send(&quot;output&quot;, e);&#10;}&#10;&#10;this.send(&quot;output&quot;, &quot;Attempting to remove sampleEntity from myMap (should print true)&quot;);&#10;this.send(&quot;output&quot;, myMap.removeEntity(sampleEntity));&#10;&#10;this.send(&quot;output&quot;, &quot;Attempting to remove sampleEntity from badMap (should print exception)&quot;);&#10;try{&#10;	badMap.removeEntity(sampleEntity);&#10;	this.send(&quot;output&quot;, &quot;Test failure, this line should not execute :-(&quot;);&#10;} catch(e){&#10;	this.send(&quot;output&quot;,  e );&#10;}&#10;&#10;&#10;this.send(&quot;output&quot;, &quot;Printing contents of local repo as JSON&quot;);&#10;var repo =  mapManager.localRepoToJSONString();&#10;this.send(&quot;output&quot;,repo);&#10;}">
            <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                </property>
            </property>
        </property>
        <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
            <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
            </property>
            <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[50.0, 165.0]">
        </property>
        <port name="output" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_type" class="ptolemy.actor.TypeAttribute" value="string">
            </property>
        </port>
    </entity>
    <entity name="Test" class="ptolemy.actor.lib.Test">
        <property name="correctValues" class="ptolemy.data.expr.Parameter" value="{&quot;Registering myMap, should print true&quot;, &quot;true&quot;, &quot;Registering myMap again, should print false&quot;, &quot;false&quot;, &quot;Registering yourMap, should print true&quot;, &quot;true&quot;, &quot;Printing maps. badMap is not registered, should not be printed.&quot;, &quot;{ myMapName: { mapName: myMapName, spaceType: Euclidean, coordinateSystem: Joey }, yourMapName: { mapName: yourMapName, spaceType: Topological, coordinateSystem: Sally } }&quot;, &quot;Creating and registering sampleEntity&quot;, &quot;Attempting to add sampleEntity to myMap (should print true)&quot;, &quot;true&quot;, &quot;Attempting to add sampleEntity to badMap (should print exception)&quot;, &quot;Cannot add an entity to an unregistred map{ mapName: badMapName, spaceType: Euclidean, coordinateSystem: Joey }&quot;, &quot;Attempting to remove sampleEntity from myMap (should print true)&quot;, &quot;true&quot;, &quot;Attempting to remove sampleEntity from badMap (should print exception)&quot;, &quot;Cannot remove an entity from an unregistred map{ mapName: badMapName, spaceType: Euclidean, coordinateSystem: Joey }&quot;, &quot;Printing contents of local repo as JSON&quot;, &quot;{\&quot;maps\&quot;:{\&quot;myMapName\&quot;:{\&quot;spaceType\&quot;:\&quot;Euclidean\&quot;,\&quot;coordinateSystem\&quot;:{\&quot;name\&quot;:\&quot;Joey\&quot;},\&quot;mapName\&quot;:\&quot;myMapName\&quot;,\&quot;mapEntities\&quot;:{}},\&quot;yourMapName\&quot;:{\&quot;spaceType\&quot;:\&quot;Topological\&quot;,\&quot;coordinateSystem\&quot;:{\&quot;name\&quot;:\&quot;Sally\&quot;},\&quot;mapName\&quot;:\&quot;yourMapName\&quot;,\&quot;mapEntities\&quot;:{}}},\&quot;coordinateTransformations\&quot;:{},\&quot;entities\&quot;:{\&quot;sampleEntity\&quot;:{\&quot;name\&quot;:\&quot;sampleEntity\&quot;,\&quot;containingMap\&quot;:null,\&quot;aliases\&quot;:{},\&quot;placements\&quot;:{},\&quot;occupancies\&quot;:{}}}}&quot;}">
        </property>
        <property name="trainingMode" class="ptolemy.actor.parameters.SharedParameter" value="false">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[375.0, 145.0]">
        </property>
    </entity>
    <entity name="Display" class="ptolemy.actor.lib.gui.Display">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={480, 192, 852, 349}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[852, 305]">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{335, 280}">
        </property>
    </entity>
    <entity name="Display2" class="ptolemy.actor.lib.gui.Display">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={0, 637, 499, 208}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[499, 164]">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{720, 260}">
        </property>
    </entity>
    <relation name="relation2" class="ptolemy.actor.TypedIORelation">
        <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
        </property>
        <vertex name="vertex1" value="[185.0, 160.0]">
        </vertex>
    </relation>
    <relation name="relation" class="ptolemy.actor.TypedIORelation">
    </relation>
    <link port="JavaScript.output" relation="relation2"/>
    <link port="Test.input" relation="relation2"/>
    <link port="Test.output" relation="relation"/>
    <link port="Display.input" relation="relation2"/>
    <link port="Display2.input" relation="relation"/>
</entity>
