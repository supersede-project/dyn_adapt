/*
@Copyright (c) 2014-2015 The Regents of the University of California.
All rights reserved.

Permission is hereby granted, without written agreement and without
license or royalty fees, to use, copy, modify, and distribute this
software and its documentation for any purpose, provided that the
above copyright notice and the following two paragraphs appear in all
copies of this software.

IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.

THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
ENHANCEMENTS, OR MODIFICATIONS.

                                                PT_COPYRIGHT_VERSION_2
                                                COPYRIGHTENDKEY


*/
package ptolemy.domains.wireless.lib.bluetooth;

import ptolemy.data.BooleanToken;
import ptolemy.data.StringToken;
import ptolemy.data.Token;
import ptolemy.kernel.util.IllegalActionException;

/**
 * This class represents a status token generated by the
 * BluetoothDevice actor that is output when a command has
 * successfully or unsuccessfully been executed, or when data has been
 * received. It contains the generic type T that is formed by any
 * arbitrary piece of data. This data is not represented in the
 * toString() of the object. If the data is a string, however, it will
 * be represented when toString() is called.
 *
 * <p> This class must be
 * instantiated with two parameters: a BluetoothStatus enum element,
 * and a data of type T.  </p>
 *
 * @author Phillip Azar
 * @version $Id: BluetoothStatusToken.java 73083 2015-08-12 01:00:05Z cxh $
 * @since Ptolemy II 11.0
 * @see BluetoothStatus
 * @see BluetoothDevice
 */
public class BluetoothStatusToken<T> extends BluetoothToken {

    /**
     * Constructs a status token with a BluetoothStatus enum element and arbitrary data point.
     * @param status The status
     * @param data The data
     */
    public BluetoothStatusToken(BluetoothStatus status, T data) {
        this._status = status;
        this._data = data;
    }

    /**
     * Returns the status value held by this token.
     * @return BluetoothStatus status
     */
    public BluetoothStatus getStatusValue() {
        return this._status;
    }

    /**
     * Returns the data held by this status token.
     * @return T data
     */
    public T getData() {
        return this._data;
    }

    @Override
    public BooleanToken isEqualTo(Token rightArgument)
            throws IllegalActionException {
        if (rightArgument instanceof BluetoothStatusToken) {
            BluetoothStatusToken right = (BluetoothStatusToken) rightArgument;
            if (this._status == right.getStatusValue()) {
                return new BooleanToken(true);
            }
            else {
                return new BooleanToken(false);
            }
        }
        else {
            throw new IllegalActionException("The argument must be of type BluetoothStatusToken");
        }
    }


    @Override
    public String toString() {
        if (_data instanceof String || _data instanceof StringToken) {
            switch (_status) {
                case STATUS_ERROR:
                    return ("ERROR," + this._data);
                case STATUS_OK:
                    return ("OK,"+ this._data);
                default:
                    return ("nil,"+ this._data);
            }
        }
        else {
            switch (_status) {
                case STATUS_ERROR:
                    return "ERROR";
                case STATUS_OK:
                    return "OK";
                default:
                    return "nil";
            }
        }
    }

    ///////////////////////////////////////////////////////////////////
    ////                         private variables                 ////

    private final BluetoothStatus _status;
    private final T _data;
}
