<?xml version="1.0" standalone="no"?>
<!DOCTYPE entity PUBLIC "-//UC Berkeley//DTD MoML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/MoML_1.dtd">
<entity name="ArrayToSequenceTest" class="ptolemy.actor.TypedCompositeActor">
    <property name="_createdBy" class="ptolemy.kernel.attributes.VersionAttribute" value="9.0.devel">
    </property>
    <property name="" class="ptolemy.domains.sdf.kernel.SDFDirector">
        <property name="iterations" class="ptolemy.data.expr.Parameter" value="3">
        </property>
        <property name="vectorizationFactor" class="ptolemy.data.expr.Parameter" value="1">
        </property>
        <property name="allowDisconnectedGraphs" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="allowRateChanges" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="constrainBufferSizes" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <property name="period" class="ptolemy.data.expr.Parameter" value="0.0">
        </property>
        <property name="synchronizeToRealTime" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="Scheduler" class="ptolemy.domains.sdf.kernel.SDFScheduler">
            <property name="constrainBufferSizes" class="ptolemy.data.expr.Parameter" value="constrainBufferSizes">
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{68.0,33.0}">
        </property>
    </property>
    <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={0, 27, 1602, 874}, maximized=true}">
    </property>
    <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[1382, 748]">
    </property>
    <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0">
    </property>
    <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{300.0, 200.0}">
    </property>
    <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Based on the model that was in ArrayToSequence.tcl">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{180, 300}">
        </property>
    </property>
    <property name="ShowTypes" class="ptolemy.vergil.actor.lib.ShowTypes">
        <property name="_location" class="ptolemy.kernel.util.Location" value="{285, 35}">
        </property>
    </property>
    <entity name="ramp" class="ptolemy.actor.lib.Ramp">
        <property name="NONE" class="ptolemy.data.expr.Parameter" value="0">
        </property>
        <property name="step" class="ptolemy.actor.parameters.PortParameter" value="1.0">
        </property>
        <property name="firingCountLimit" class="ptolemy.data.expr.Parameter" value="NONE">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[35.0, 140.0]">
        </property>
    </entity>
    <entity name="s2a" class="ptolemy.domains.sdf.lib.SequenceToArray">
        <property name="arrayLength" class="ptolemy.actor.parameters.PortParameter" value="2">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{165.0,112.73515319824219}">
        </property>
    </entity>
    <entity name="a2s" class="ptolemy.domains.sdf.lib.ArrayToSequence">
        <property name="arrayLength" class="ptolemy.data.expr.Parameter" value="2">
        </property>
        <property name="enforceArrayLength" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[330.0, 210.0]">
        </property>
    </entity>
    <entity name="TypeTest" class="ptolemy.actor.lib.TypeTest">
        <property name="parameterTypes" class="ptolemy.data.expr.Parameter" value="{Test = {correctValues = &quot;arrayType(double,6)&quot;, requireAllCorrectValues = &quot;boolean&quot;, tolerance = &quot;double&quot;, trainingMode = &quot;boolean&quot;}, a2s = {arrayLength = &quot;int&quot;, enforceArrayLength = &quot;boolean&quot;}, ramp = {NONE = &quot;int&quot;, firingCountLimit = &quot;int&quot;, init = &quot;int&quot;, step = &quot;double&quot;}, s2a = {arrayLength = &quot;int&quot;}}">
        </property>
        <property name="portTypes" class="ptolemy.data.expr.Parameter" value="{Test = {input = &quot;double&quot;, output = &quot;boolean&quot;}, a2s = {input = &quot;arrayType(double,2)&quot;, output = &quot;double&quot;}, ramp = {output = &quot;double&quot;, step = &quot;double&quot;, trigger = &quot;unknown&quot;}, s2a = {arrayLength = &quot;int&quot;, input = &quot;double&quot;, output = &quot;arrayType(double,2)&quot;}}">
        </property>
        <property name="trainingMode" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[485.0, 220.0]">
        </property>
    </entity>
    <entity name="Test" class="ptolemy.actor.lib.Test">
        <property name="correctValues" class="ptolemy.data.expr.Parameter" value="{0.0, 1.0, 2.0, 3.0, 4.0, 5.0}">
        </property>
        <property name="trainingMode" class="ptolemy.actor.parameters.SharedParameter" value="false">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[470.0, 60.0]">
        </property>
    </entity>
    <relation name="_R" class="ptolemy.actor.TypedIORelation">
        <property name="width" class="ptolemy.data.expr.Parameter" value="1">
        </property>
    </relation>
    <relation name="_R2" class="ptolemy.actor.TypedIORelation">
        <property name="width" class="ptolemy.data.expr.Parameter" value="1">
        </property>
    </relation>
    <relation name="relation" class="ptolemy.actor.TypedIORelation">
        <property name="width" class="ptolemy.data.expr.Parameter" value="1">
        </property>
        <vertex name="vertex1" value="[410.0, 145.0]">
        </vertex>
    </relation>
    <link port="ramp.output" relation="_R"/>
    <link port="s2a.input" relation="_R"/>
    <link port="s2a.output" relation="_R2"/>
    <link port="a2s.input" relation="_R2"/>
    <link port="a2s.output" relation="relation"/>
    <link port="TypeTest.input" relation="relation"/>
    <link port="Test.input" relation="relation"/>
</entity>
