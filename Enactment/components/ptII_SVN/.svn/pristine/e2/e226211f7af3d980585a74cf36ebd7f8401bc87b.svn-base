<?xml version="1.0" standalone="no"?>
<!DOCTYPE entity PUBLIC "-//UC Berkeley//DTD MoML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/MoML_1.dtd">
<entity name="SmartIntruder6Teams" class="ptolemy.actor.TypedCompositeActor">
    <property name="_createdBy" class="ptolemy.kernel.attributes.VersionAttribute" value="11.0.devel">
    </property>
    <property name="DE Director" class="ptolemy.domains.de.kernel.DEDirector">
        <property name="stopTime" class="ptolemy.data.expr.Parameter" value="">
        </property>
        <property name="stopWhenQueueIsEmpty" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <property name="synchronizeToRealTime" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <property name="enforceMicrostepSemantics" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-66.53225708007812, -29.5]">
        </property>
    </property>
    <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={0, 22, 1440, 748}, maximized=false}">
    </property>
    <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[1206, 638]">
    </property>
    <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="0.7706830531459334">
    </property>
    <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{653.2865905761719, 350.1124238999791}">
    </property>
    <property name="enableBackwardTypeInference" class="ptolemy.data.expr.Parameter" value="true">
    </property>
    <property name="_defaultWidthInferredTo1" class="ptolemy.data.expr.Parameter" value="true">
    </property>
    <property name="_defaultInferredWidthTo1" class="ptolemy.data.expr.Parameter" value="true">
    </property>
    <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="An intruder model that moves at constant speed and&#10;randomly changes direction at each discrete time step.">
        </property>
        <property name="_location" class="ptolemy.kernel.util.RelativeLocation" value="[-126.53225708007812, 15.5]">
        </property>
    </property>
    <property name="storeLocation" class="ptolemy.data.expr.Parameter" value="&quot;http://ptango.eecs.berkeley.edu:8077/keyvalue&quot;">
        <property name="_hideName" class="ptolemy.kernel.util.SingletonAttribute">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.ValueIcon">
            <property name="_color" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 1.0, 1.0}">
            </property>
        </property>
        <property name="_smallIconDescription" class="ptolemy.kernel.util.SingletonConfigurableAttribute">
            <configure>
      <svg>
        <text x="20" style="font-size:14; font-family:SansSerif; fill:blue" y="20">-P-</text>
      </svg>
    </configure>
        </property>
        <property name="_editorFactory" class="ptolemy.vergil.toolbox.VisibleParameterEditorFactory">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[433.4677429199219, -49.5]">
        </property>
    </property>
    <property name="maxSpeed" class="ptolemy.data.expr.Parameter" value="5.0">
        <property name="_hideName" class="ptolemy.kernel.util.SingletonAttribute">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.ValueIcon">
            <property name="_color" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 1.0, 1.0}">
            </property>
        </property>
        <property name="_smallIconDescription" class="ptolemy.kernel.util.SingletonConfigurableAttribute">
            <configure>
      <svg>
        <text x="20" style="font-size:14; font-family:SansSerif; fill:blue" y="20">-P-</text>
      </svg>
    </configure>
        </property>
        <property name="_editorFactory" class="ptolemy.vergil.toolbox.VisibleParameterEditorFactory">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[3.467742919921875, -49.5]">
        </property>
    </property>
    <property name="teamNames" class="ptolemy.data.expr.Parameter" value="{&quot;team0&quot;,&quot;team1&quot;,&quot;team2&quot;,&quot;team3&quot;,&quot;team4&quot;,&quot;team5&quot;}">
        <property name="_hideName" class="ptolemy.kernel.util.SingletonAttribute">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.ValueIcon">
            <property name="_color" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 1.0, 1.0}">
            </property>
        </property>
        <property name="_smallIconDescription" class="ptolemy.kernel.util.SingletonConfigurableAttribute">
            <configure>
      <svg>
        <text x="20" style="font-size:14; font-family:SansSerif; fill:blue" y="20">-P-</text>
      </svg>
    </configure>
        </property>
        <property name="_editorFactory" class="ptolemy.vergil.toolbox.VisibleParameterEditorFactory">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[833.4677429199219, -49.5]">
        </property>
    </property>
    <property name="Annotation2" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="An intruder that moves away from a team of search robots. ">
        </property>
        <property name="_location" class="ptolemy.kernel.util.RelativeLocation" value="[-205.0, 25.0]">
            <property name="relativeTo" class="ptolemy.kernel.util.StringAttribute" value="Intruder">
            </property>
            <property name="relativeToElementName" class="ptolemy.kernel.util.StringAttribute" value="entity">
            </property>
        </property>
    </property>
    <property name="intruderName" class="ptolemy.data.expr.Parameter" value="&quot;intruder&quot;">
        <property name="_hideName" class="ptolemy.kernel.util.SingletonAttribute">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.ValueIcon">
            <property name="_color" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 1.0, 1.0}">
            </property>
        </property>
        <property name="_smallIconDescription" class="ptolemy.kernel.util.SingletonConfigurableAttribute">
            <configure>
      <svg>
        <text x="20" style="font-size:14; font-family:SansSerif; fill:blue" y="20">-P-</text>
      </svg>
    </configure>
        </property>
        <property name="_editorFactory" class="ptolemy.vergil.toolbox.VisibleParameterEditorFactory">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[263.4677429199219, -49.5]">
        </property>
    </property>
    <property name="Annotation3" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.4,0.4,0.4,1.0}">
        </property>
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Author: Ilge Akkaya">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-110.0, 635.0]">
        </property>
    </property>
    <property name="_layoutConfiguration" class="ptolemy.vergil.basic.layout.ActorLayoutConfiguration">
        <property name="spacing" class="ptolemy.actor.parameters.DoubleRangeParameter" value="4.4">
            <display name="Object spacing"/>
        </property>
    </property>
    <class name="KVtoArray" extends="ptolemy.actor.TypedCompositeActor">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[1338.4677429199219, -19.5]">
        </property>
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={256, 134, 739, 634}, maximized=false}">
        </property>
        <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[505, 524]">
        </property>
        <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0">
        </property>
        <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{249.5, 303.6015625}">
        </property>
        <property name="key" class="ptolemy.data.expr.Parameter" value="teamNames(1)">
            <property name="_hideName" class="ptolemy.kernel.util.SingletonAttribute">
            </property>
            <property name="_icon" class="ptolemy.vergil.icon.ValueIcon">
                <property name="_color" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 1.0, 1.0}">
                </property>
            </property>
            <property name="_smallIconDescription" class="ptolemy.kernel.util.SingletonConfigurableAttribute">
                <configure>
      <svg>
        <text x="20" style="font-size:14; font-family:SansSerif; fill:blue" y="20">-P-</text>
      </svg>
    </configure>
            </property>
            <property name="_editorFactory" class="ptolemy.vergil.toolbox.VisibleParameterEditorFactory">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{15.0, 60.0}">
            </property>
        </property>
        <port name="x" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{415.0, 115.0}">
            </property>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
        <port name="trigger" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{20.0, 125.0}">
            </property>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
        <entity name="Const" class="ptolemy.actor.lib.Const">
            <property name="value" class="ptolemy.data.expr.Parameter" value="false">
            </property>
            <doc>Create a constant sequence.</doc>
            <property name="_icon" class="ptolemy.vergil.icon.BoxedValueIcon">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="value">
                </property>
                <property name="displayWidth" class="ptolemy.data.expr.Parameter" value="60">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{110.0, 125.0}">
            </property>
        </entity>
        <entity name="JSONToToken" class="ptolemy.actor.lib.conversions.json.JSONToToken">
            <property name="_location" class="ptolemy.kernel.util.Location" value="{325.0, 115.0}">
            </property>
        </entity>
        <entity name="KeyValueStore" class="org.terraswarm.accessor.JSAccessor">
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="&#10;    // &#10;function fire() {&#10;    var store = get('storeLocation');&#10;    var theKey = get('key');&#10;    var toRemove = get('remove');&#10;    var theValue = get('value');&#10;    var url = store + '/get?id=' + theKey;&#10;    var produce;&#10;    if (toRemove) {&#10;       if (theKey != &quot;&quot;) {&#10;           produce = readURL(url);&#10;           url = store + '/delete?id=' + theKey;&#10;           readURL(url);&#10;           if (produce != &quot;&quot;) {&#10;               send('result', produce);&#10;           }&#10;        }&#10;    } else {&#10;        // toRemove == false. If there is a value, use it to set.&#10;        if (theValue != &quot;&quot;) {&#10;            // FIXME: Escape theValue to make a valid URL.&#10;            url = store + '/set?id=' + encodeURIComponent(theKey) + '&amp;value=' + encodeURIComponent(theValue);&#10;            readURL(url);&#10;            send('result', theValue);&#10;        } else {&#10;            var valueFromStore = decodeURIComponent(readURL(url));&#10;            send('result', valueFromStore);&#10;        }&#10;    }&#10;}&#10;    // &#10;  ">
            </property>
            <property name="accessorSource" class="org.terraswarm.accessor.JSAccessor$ActionableAttribute" value="https://www.terraswarm.org/accessors/net/KeyValueStore.xml">
            </property>
            <property name="documentation" class="ptolemy.vergil.basic.DocAttribute">
                <property name="description" class="ptolemy.kernel.util.StringAttribute" value="&#10;    &#10;This accessor reads or writes data to a key-value store web service.&#10;The key and the value are both encoded using the JavaScript encodeURIComponent() function,&#10;and on retrieval, decoded using decodeURIComponent().&#10;If &lt;i&gt;remove&lt;/i&gt; is true and the &lt;i&gt;key&lt;/i&gt; is non-empty, then upon firing, this actor&#10;will remove the specified key from the store, producing on its output the previous&#10;value (if any).&#10;&lt;p&gt;&#10;This accessor assumes that the protocol implemented at that location matches&#10;the specification below for the default location:&#10;&lt;ul&gt;&#10;&lt;li&gt;To store a value with key MY_ID and value MY_VALUE, use&#10;&lt;pre&gt;&#10;   http://ptango.eecs.berkeley.edu:8077/keyvalue/set?id=MY_ID&amp;value=MY_VALUE&#10;&lt;/pre&gt;&#10;&lt;/li&gt;&#10;&lt;li&gt;To retrieve the value, use&#10;&lt;pre&gt;&#10;   http://ptango.eecs.berkeley.edu:8077/keyvalue/get?id=MY_ID&#10;&lt;/pre&gt;&#10;&lt;/li&gt;&#10;&lt;li&gt;To remove a value, use&#10;&lt;pre&gt;&#10;   http://ptango.eecs.berkeley.edu:8077/keyvalue/delete?id=MY_ID&#10;&lt;/pre&gt;&#10;&lt;/li&gt;&#10;&lt;li&gt;To list all keys (a JSON array of strings), use&#10;&lt;pre&gt;&#10;   http://ptango.eecs.berkeley.edu:8077/keyvalue/list&#10;&lt;/pre&gt;&#10;&lt;/li&gt;&#10;&lt;p&gt;&#10;A Ptolemy II model that provides such a key-value store service is provided&#10;at &lt;a href=&quot;https://www.terraswarm.org/accessors/demo/KeyValueStore/KeyValueStore.xml&quot;&gt;&#10;https://www.terraswarm.org/accessors/demo/KeyValueStore/KeyValueStore.xml&lt;/a&gt;.&#10;A demo client that uses this accessor is provided at&#10;&lt;a href=&quot;https://www.terraswarm.org/accessors/demo/KeyValueStore/KeyValueStoreClient.xml&quot;&gt;&#10;https://www.terraswarm.org/accessors/demo/KeyValueStore/KeyValueStoreClient.xml&lt;/a&gt;.&#10;&lt;/ul&gt;&#10;	&#10;  ">
                </property>
                <property name="author" class="ptolemy.kernel.util.StringAttribute" value="Edward A. Lee">
                </property>
                <property name="version" class="ptolemy.kernel.util.StringAttribute" value="0.1">
                </property>
                <property name="error (port)" class="ptolemy.kernel.util.StringAttribute" value="The error message if an error occurs. If this port is not connected and an error occurs, then an exception is thrown instead.">
                </property>
                <property name="storeLocation (port-parameter)" class="ptolemy.kernel.util.StringAttribute">
                </property>
                <property name="key (port-parameter)" class="ptolemy.kernel.util.StringAttribute" value="Key to be updated or retrieved.">
                </property>
                <property name="remove (port-parameter)" class="ptolemy.kernel.util.StringAttribute" value="If true, then remove the key from the store; otherwise, retrieve the value for the key.">
                </property>
                <property name="value (port-parameter)" class="ptolemy.kernel.util.StringAttribute" value="Value to store in the key-value store, or empty to not store anything.">
                </property>
                <property name="result (port)" class="ptolemy.kernel.util.StringAttribute" value="Value retrieved from or written to the key-value store.">
                </property>
                <property name="key (port)" class="ptolemy.kernel.util.StringAttribute" value="Key to be updated or retrieved.">
                </property>
                <property name="value (port)" class="ptolemy.kernel.util.StringAttribute" value="Value to store in the key-value store, or empty to not store anything.">
                </property>
            </property>
            <property name="storeLocation" class="ptolemy.actor.parameters.PortParameter" value="storeLocation">
            </property>
            <property name="key" class="ptolemy.actor.parameters.PortParameter" value="key">
            </property>
            <property name="remove" class="ptolemy.actor.parameters.PortParameter" value="false">
            </property>
            <property name="value" class="ptolemy.actor.parameters.PortParameter" value="&quot;&quot;">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{225.0, 115.0}">
            </property>
            <property name="_expertMode" class="ptolemy.kernel.util.SingletonAttribute">
            </property>
            <port name="storeLocation" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
                <property name="defaultValue" class="ptolemy.data.expr.Parameter">
                </property>
            </port>
            <port name="key" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
                <property name="defaultValue" class="ptolemy.data.expr.Parameter">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="string">
                </property>
            </port>
            <port name="remove" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
                <property name="defaultValue" class="ptolemy.data.expr.Parameter">
                </property>
            </port>
            <port name="value" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
                <property name="defaultValue" class="ptolemy.data.expr.Parameter">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="string">
                </property>
            </port>
            <port name="result" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="string">
                </property>
            </port>
        </entity>
        <relation name="relation2" class="ptolemy.actor.TypedIORelation">
            <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;trigger._location&quot;,x=20.0,y=125.0}, tail={id=&quot;Const.trigger&quot;,x=110.0,y=125.0}, points={} } }">
            </property>
        </relation>
        <relation name="relation4" class="ptolemy.actor.TypedIORelation">
            <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;x._location&quot;,x=415.0,y=115.0}, tail={id=&quot;JSONToToken.output&quot;,x=325.0,y=115.0}, points={} } }">
            </property>
        </relation>
        <relation name="relation5" class="ptolemy.actor.TypedIORelation">
            <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;JSONToToken.input&quot;,x=325.0,y=115.0}, tail={id=&quot;KeyValueStore.result&quot;,x=225.0,y=115.0}, points={} } }">
            </property>
        </relation>
        <relation name="relation" class="ptolemy.actor.TypedIORelation">
            <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;Const.output&quot;,x=110.0,y=125.0}, tail={id=&quot;KeyValueStore.remove&quot;,x=225.0,y=115.0}, points={} } }">
            </property>
        </relation>
        <link port="x" relation="relation4"/>
        <link port="trigger" relation="relation2"/>
        <link port="Const.output" relation="relation"/>
        <link port="Const.trigger" relation="relation2"/>
        <link port="JSONToToken.input" relation="relation5"/>
        <link port="JSONToToken.output" relation="relation4"/>
        <link port="KeyValueStore.remove" relation="relation"/>
        <link port="KeyValueStore.result" relation="relation5"/>
    </class>
    <entity name="DiscreteClock" class="ptolemy.actor.lib.DiscreteClock">
        <property name="values" class="ptolemy.data.expr.Parameter" value="{false}">
        </property>
        <doc>Create periodic timed events.</doc>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-66.53225708007812, 370.5]">
        </property>
    </entity>
    <entity name="ElementsToArray" class="ptolemy.actor.lib.ElementsToArray">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[273.4677429199219, 115.5]">
        </property>
        <port name="input" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="multiport"/>
            <property name="_type" class="ptolemy.actor.TypeAttribute" value="arrayType(double,2)">
            </property>
        </port>
    </entity>
    <entity name="ArrayToElements2" class="ptolemy.actor.lib.ArrayToElements">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[1138.4677429199219, 185.5]">
        </property>
    </entity>
    <entity name="ArrayToElements3" class="ptolemy.actor.lib.ArrayToElements">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[1138.4677429199219, 245.5]">
        </property>
    </entity>
    <entity name="ArrayToElements4" class="ptolemy.actor.lib.ArrayToElements">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[1138.4677429199219, 305.5]">
        </property>
    </entity>
    <entity name="Intruder" class="ptolemy.actor.TypedCompositeActor">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[563.4677429199219, 115.5]">
        </property>
        <property name="initialPosition" class="ptolemy.data.expr.Parameter" value="{0,10}">
            <property name="_hideName" class="ptolemy.kernel.util.SingletonAttribute">
            </property>
            <property name="_icon" class="ptolemy.vergil.icon.ValueIcon">
                <property name="_color" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 1.0, 1.0}">
                </property>
            </property>
            <property name="_smallIconDescription" class="ptolemy.kernel.util.SingletonConfigurableAttribute">
                <configure>
      <svg>
        <text x="20" style="font-size:14; font-family:SansSerif; fill:blue" y="20">-P-</text>
      </svg>
    </configure>
            </property>
            <property name="_editorFactory" class="ptolemy.vergil.toolbox.VisibleParameterEditorFactory">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{-515.0, -430.0}">
            </property>
        </property>
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={42, 22, 1115, 634}, maximized=false}">
        </property>
        <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[881, 449]">
        </property>
        <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.004034582132565">
        </property>
        <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{-89.25000000000011, -217.63398527195753}">
        </property>
        <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
            <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Read robot's location whenever new information is received from the search team">
            </property>
            <property name="_location" class="ptolemy.kernel.util.RelativeLocation" value="[-230.0, 105.0]">
                <property name="relativeTo" class="ptolemy.kernel.util.StringAttribute" value="Register">
                </property>
                <property name="relativeToElementName" class="ptolemy.kernel.util.StringAttribute" value="entity">
                </property>
            </property>
        </property>
        <port name="robotPosition" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{-355.0, -365.0}">
            </property>
        </port>
        <port name="searchTeamLocations" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{-510.0, -235.0}">
            </property>
        </port>
        <entity name="CompositeOptimizer" class="org.ptolemy.optimization.CompositeOptimizer">
            <property name="mode" class="ptolemy.data.expr.StringParameter" value="MAX">
            </property>
            <property name="dimensionOfOptimizationSpace" class="ptolemy.data.expr.Parameter" value="2">
            </property>
            <doc>Optimize the objective function provided in the inside composite, subject to constraints and precision/iteration limits</doc>
            <property name="_configurer" class="ptolemy.actor.gui.EditorPaneFactory">
            </property>
            <property name="_configurer2" class="ptolemy.actor.gui.InsideEntityEditorPaneFactory">
            </property>
            <property name="_tableauFactory" class="ptolemy.actor.gui.LevelSkippingTableauFactory">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{-305.0, -310.0}">
            </property>
            <port name="f(x)" class="ptolemy.actor.lib.hoc.MirrorPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="g(x)" class="ptolemy.actor.lib.hoc.MirrorPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="x" class="ptolemy.actor.lib.hoc.MirrorPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="intruderPosition" class="ptolemy.actor.lib.hoc.MirrorPort">
                <property name="input"/>
            </port>
            <port name="port" class="ptolemy.actor.lib.hoc.MirrorPort">
                <property name="input"/>
            </port>
            <entity name="OptimizerComposite" class="org.ptolemy.optimization.CompositeOptimizer$OptimizerComposite">
                <property name="SDFDirector" class="ptolemy.domains.sdf.kernel.SDFDirector">
                    <property name="iterations" class="ptolemy.data.expr.Parameter" value="0">
                    </property>
                    <property name="_location" class="ptolemy.kernel.util.Location" value="{0.0, 0.0}">
                    </property>
                </property>
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={254, 132, 934, 634}, maximized=false}">
                </property>
                <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[700, 524]">
                </property>
                <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="0.8">
                </property>
                <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{354.3953488372093, 213.28988008720933}">
                </property>
                <port name="f(x)" class="ptolemy.actor.lib.hoc.MirrorPort">
                    <property name="output"/>
                    <property name="_location" class="ptolemy.kernel.util.Location" value="{810.0, 170.0}">
                    </property>
                </port>
                <port name="g(x)" class="ptolemy.actor.lib.hoc.MirrorPort">
                    <property name="output"/>
                    <property name="_location" class="ptolemy.kernel.util.Location" value="{365.0, 70.0}">
                    </property>
                </port>
                <port name="x" class="ptolemy.actor.lib.hoc.MirrorPort">
                    <property name="input"/>
                    <property name="_location" class="ptolemy.kernel.util.Location" value="{-40.0, 70.0}">
                    </property>
                </port>
                <port name="intruderPosition" class="ptolemy.actor.lib.hoc.MirrorPort">
                    <property name="input"/>
                    <property name="_location" class="ptolemy.kernel.util.Location" value="{5.0, 165.0}">
                    </property>
                </port>
                <port name="port" class="ptolemy.actor.lib.hoc.MirrorPort">
                    <property name="input"/>
                    <property name="_location" class="ptolemy.kernel.util.Location" value="{535.0, 75.0}">
                    </property>
                </port>
                <entity name="IterateOverArray" class="ptolemy.actor.lib.hoc.IterateOverArray">
                    <doc>Iterate a contained actor over input arrays</doc>
                    <property name="_icon" class="ptolemy.vergil.icon.CopyCatIcon">
                    </property>
                    <property name="_configurer" class="ptolemy.actor.gui.InsideEntityEditorPaneFactory">
                    </property>
                    <property name="_tableauFactory" class="ptolemy.actor.gui.LevelSkippingTableauFactory">
                    </property>
                    <property name="_location" class="ptolemy.kernel.util.Location" value="{620.0, 185.0}">
                    </property>
                    <port name="location" class="ptolemy.actor.lib.hoc.IterateOverArray$IteratePort">
                        <property name="input"/>
                    </port>
                    <port name="port" class="ptolemy.actor.lib.hoc.IterateOverArray$IteratePort">
                        <property name="output"/>
                    </port>
                    <port name="intruder" class="ptolemy.actor.lib.hoc.IterateOverArray$IteratePort">
                        <property name="input"/>
                    </port>
                    <entity name="IterateComposite" class="ptolemy.actor.lib.hoc.IterateOverArray$IterateComposite">
                        <property name="annotation" class="ptolemy.kernel.util.Attribute">
                            <property name="_hideName" class="ptolemy.kernel.util.SingletonAttribute">
                            </property>
                            <property name="_iconDescription" class="ptolemy.kernel.util.SingletonConfigurableAttribute">
                                <configure><svg><text x="20" y="20" style="font-size:14; font-family:SansSerif; fill:blue">Make sure there is a director here!</text></svg></configure>
                            </property>
                            <property name="_smallIconDescription" class="ptolemy.kernel.util.SingletonConfigurableAttribute">
                                <configure>
                <svg> 
                    <text x="20" style="font-size:14; font-family:SansSerif; fill:blue" y="20">-A-</text>
                </svg>
              </configure>
                            </property>
                            <property name="_controllerFactory" class="ptolemy.vergil.basic.NodeControllerFactory">
                            </property>
                            <property name="_editorFactory" class="ptolemy.vergil.toolbox.AnnotationEditorFactory">
                            </property>
                            <property name="_location" class="ptolemy.kernel.util.Location" value="{100.0, 5.0}">
                            </property>
                        </property>
                        <property name="SDF Director" class="ptolemy.domains.sdf.kernel.SDFDirector">
                            <property name="iterations" class="ptolemy.data.expr.Parameter" value="AUTO">
                            </property>
                            <property name="_location" class="ptolemy.kernel.util.Location" value="{35.0, 40.0}">
                            </property>
                        </property>
                        <port name="location" class="ptolemy.actor.lib.hoc.IterateOverArray$IteratePort">
                            <property name="input"/>
                            <property name="_location" class="ptolemy.kernel.util.Location" value="[-5.0, 105.0]">
                            </property>
                        </port>
                        <port name="port" class="ptolemy.actor.lib.hoc.IterateOverArray$IteratePort">
                            <property name="output"/>
                            <property name="_location" class="ptolemy.kernel.util.Location" value="{445.0, 160.0}">
                            </property>
                        </port>
                        <port name="intruder" class="ptolemy.actor.lib.hoc.IterateOverArray$IteratePort">
                            <property name="input"/>
                            <property name="_location" class="ptolemy.kernel.util.Location" value="{-5.0, 170.0}">
                            </property>
                        </port>
                        <entity name="Expression" class="ptolemy.actor.lib.Expression">
                            <property name="expression" class="ptolemy.kernel.util.StringAttribute" value="sqrt((intruder(0)-robot(0))^2 + (intruder(1)-robot(1))^2   )">
                            </property>
                            <property name="_icon" class="ptolemy.vergil.icon.BoxedValueIcon">
                                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="expression">
                                </property>
                                <property name="displayWidth" class="ptolemy.data.expr.Parameter" value="60">
                                </property>
                                <property name="displayHeight" class="ptolemy.data.expr.Parameter" value="10">
                                </property>
                            </property>
                            <property name="_location" class="ptolemy.kernel.util.Location" value="{235.0, 160.0}">
                            </property>
                            <port name="robot" class="ptolemy.actor.TypedIOPort">
                                <property name="input"/>
                            </port>
                            <port name="intruder" class="ptolemy.actor.TypedIOPort">
                                <property name="input"/>
                            </port>
                        </entity>
                        <relation name="relation" class="ptolemy.actor.TypedIORelation">
                        </relation>
                        <relation name="relation2" class="ptolemy.actor.TypedIORelation">
                            <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;port._location&quot;,x=445.0,y=160.0}, tail={id=&quot;Expression.output&quot;,x=235.0,y=160.0}, points={} } }">
                            </property>
                        </relation>
                        <relation name="relation3" class="ptolemy.actor.TypedIORelation">
                            <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;intruder._location&quot;,x=-5.0,y=170.0}, tail={id=&quot;Expression.intruder&quot;,x=235.0,y=160.0}, points={} } }">
                            </property>
                        </relation>
                        <link port="location" relation="relation"/>
                        <link port="port" relation="relation2"/>
                        <link port="intruder" relation="relation3"/>
                        <link port="Expression.output" relation="relation2"/>
                        <link port="Expression.robot" relation="relation"/>
                        <link port="Expression.intruder" relation="relation3"/>
                    </entity>
                </entity>
                <entity name="ArrayMinimum" class="ptolemy.actor.lib.ArrayMinimum">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="{715.0, 185.0}">
                    </property>
                </entity>
                <entity name="AddSubtract" class="ptolemy.actor.lib.AddSubtract">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="{185.0, 175.0}">
                    </property>
                </entity>
                <entity name="Repeat" class="ptolemy.domains.sdf.lib.Repeat">
                    <property name="numberOfTimes" class="ptolemy.actor.parameters.PortParameter" value="teamNames.length()">
                    </property>
                    <property name="_location" class="ptolemy.kernel.util.Location" value="{385.0, 185.0}">
                    </property>
                </entity>
                <entity name="SequenceToArray" class="ptolemy.domains.sdf.lib.SequenceToArray">
                    <property name="arrayLength" class="ptolemy.actor.parameters.PortParameter" value="teamNames.length()">
                    </property>
                    <property name="_location" class="ptolemy.kernel.util.Location" value="{475.0, 195.0}">
                    </property>
                </entity>
                <entity name="Expression" class="ptolemy.actor.lib.Expression">
                    <property name="expression" class="ptolemy.kernel.util.StringAttribute" value="{maxSpeed - sqrt(x(0)^2+x(1)^2)}">
                    </property>
                    <property name="_icon" class="ptolemy.vergil.icon.BoxedValueIcon">
                        <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="expression">
                        </property>
                        <property name="displayWidth" class="ptolemy.data.expr.Parameter" value="60">
                        </property>
                        <property name="displayHeight" class="ptolemy.data.expr.Parameter" value="10">
                        </property>
                    </property>
                    <property name="_location" class="ptolemy.kernel.util.Location" value="{215.0, 75.0}">
                    </property>
                    <port name="x" class="ptolemy.actor.TypedIOPort">
                        <property name="input"/>
                    </port>
                </entity>
                <relation name="relation2" class="ptolemy.actor.TypedIORelation">
                    <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;f(x)._location&quot;,x=810.0,y=170.0}, tail={id=&quot;ArrayMinimum.output&quot;,x=715.0,y=185.0}, points={} } }">
                    </property>
                </relation>
                <relation name="relation4" class="ptolemy.actor.TypedIORelation">
                    <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;intruderPosition._location&quot;,x=5.0,y=165.0}, tail={id=&quot;AddSubtract.plus&quot;,x=185.0,y=175.0,index=2}, points={} } }">
                    </property>
                </relation>
                <relation name="relation7" class="ptolemy.actor.TypedIORelation">
                    <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;AddSubtract.output&quot;,x=185.0,y=175.0}, tail={id=&quot;Repeat.input&quot;,x=385.0,y=185.0}, points={} } }">
                    </property>
                </relation>
                <relation name="relation5" class="ptolemy.actor.TypedIORelation">
                    <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;Repeat.output&quot;,x=385.0,y=185.0}, tail={id=&quot;SequenceToArray.input&quot;,x=475.0,y=195.0}, points={} } }">
                    </property>
                </relation>
                <relation name="relation8" class="ptolemy.actor.TypedIORelation">
                    <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;IterateOverArray.intruder&quot;,x=620.0,y=185.0}, tail={id=&quot;SequenceToArray.output&quot;,x=475.0,y=195.0}, points={} } }">
                    </property>
                </relation>
                <relation name="relation9" class="ptolemy.actor.TypedIORelation">
                    <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                    </property>
                    <vertex name="vertex1" value="{90.0, 75.0}">
                    </vertex>
                    <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;Expression.x&quot;,x=215.0,y=75.0}, tail={id=&quot;relation9.vertex1&quot;,x=90.0,y=75.0}, points={} },{ head={id=&quot;AddSubtract.plus&quot;,x=185.0,y=175.0,index=2}, tail={id=&quot;relation9.vertex1&quot;,x=90.0,y=75.0}, points={90.0,160.0} },{ head={id=&quot;x._location&quot;,x=-40.0,y=70.0}, tail={id=&quot;relation9.vertex1&quot;,x=90.0,y=75.0}, points={} } }">
                    </property>
                </relation>
                <relation name="relation3" class="ptolemy.actor.TypedIORelation">
                    <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;g(x)._location&quot;,x=365.0,y=70.0}, tail={id=&quot;Expression.output&quot;,x=215.0,y=75.0}, points={} } }">
                    </property>
                </relation>
                <relation name="relation" class="ptolemy.actor.TypedIORelation">
                    <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;port._location&quot;,x=535.0,y=75.0}, tail={id=&quot;IterateOverArray.location&quot;,x=620.0,y=185.0}, points={560.0,75.0,560.0,175.0} } }">
                    </property>
                </relation>
                <relation name="relation6" class="ptolemy.actor.TypedIORelation">
                    <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;IterateOverArray.port&quot;,x=620.0,y=185.0}, tail={id=&quot;ArrayMinimum.input&quot;,x=715.0,y=185.0}, points={} } }">
                    </property>
                </relation>
                <link port="f(x)" relation="relation2"/>
                <link port="g(x)" relation="relation3"/>
                <link port="x" relation="relation9"/>
                <link port="intruderPosition" relation="relation4"/>
                <link port="port" relation="relation"/>
                <link port="IterateOverArray.location" relation="relation"/>
                <link port="IterateOverArray.port" relation="relation6"/>
                <link port="IterateOverArray.intruder" relation="relation8"/>
                <link port="ArrayMinimum.input" relation="relation6"/>
                <link port="ArrayMinimum.output" relation="relation2"/>
                <link port="AddSubtract.plus" relation="relation9"/>
                <link port="AddSubtract.plus" relation="relation4"/>
                <link port="AddSubtract.output" relation="relation7"/>
                <link port="Repeat.input" relation="relation7"/>
                <link port="Repeat.output" relation="relation5"/>
                <link port="SequenceToArray.input" relation="relation5"/>
                <link port="SequenceToArray.output" relation="relation8"/>
                <link port="Expression.output" relation="relation3"/>
                <link port="Expression.x" relation="relation9"/>
            </entity>
        </entity>
        <entity name="Register" class="ptolemy.domains.de.lib.Register">
            <property name="initialValue" class="ptolemy.data.expr.Parameter" value="initialPosition">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{15.0, -300.0}">
            </property>
            <property name="DocAttribute" class="ptolemy.vergil.basic.DocAttribute">
            </property>
        </entity>
        <entity name="TimeDelay" class="ptolemy.actor.lib.TimeDelay">
            <property name="_location" class="ptolemy.kernel.util.Location" value="{-55.0, -300.0}">
            </property>
        </entity>
        <entity name="AddSubtract" class="ptolemy.actor.lib.AddSubtract">
            <property name="_location" class="ptolemy.kernel.util.Location" value="{-160.0, -300.0}">
            </property>
        </entity>
        <relation name="relation3" class="ptolemy.actor.TypedIORelation">
            <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
            </property>
            <vertex name="vertex1" value="{-380.0, -235.0}">
            </vertex>
            <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;searchTeamLocations._location&quot;,x=-510.0,y=-235.0}, tail={id=&quot;relation3.vertex1&quot;,x=-380.0,y=-235.0}, points={} },{ head={id=&quot;CompositeOptimizer.port&quot;,x=-305.0,y=-310.0}, tail={id=&quot;relation3.vertex1&quot;,x=-380.0,y=-235.0}, points={-380.0,-300.0} },{ head={id=&quot;Register.trigger&quot;,x=15.0,y=-300.0}, tail={id=&quot;relation3.vertex1&quot;,x=-380.0,y=-235.0}, points={15.0,-235.0} } }">
            </property>
        </relation>
        <relation name="relation6" class="ptolemy.actor.TypedIORelation">
            <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
            </property>
            <vertex name="vertex1" value="{-380.0, -365.0}">
            </vertex>
            <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;CompositeOptimizer.intruderPosition&quot;,x=-305.0,y=-310.0}, tail={id=&quot;relation6.vertex1&quot;,x=-380.0,y=-365.0}, points={-380.0,-310.0} },{ head={id=&quot;Register.output&quot;,x=15.0,y=-300.0}, tail={id=&quot;relation6.vertex1&quot;,x=-380.0,y=-365.0}, points={65.0,-300.0,65.0,-405.0,-380.0,-405.0} },{ head={id=&quot;relation6.vertex1&quot;,x=-290.0,y=-265.0}, tail={id=&quot;.Merge.output&quot;,x=130.0,y=-250.0}, points={-105.0,-265.0,-105.0,-370.0,165.0,-370.0,165.0,-250.0} },{ head={id=&quot;robotPosition._location&quot;,x=-355.0,y=-365.0}, tail={id=&quot;relation6.vertex1&quot;,x=-380.0,y=-365.0}, points={} },{ head={id=&quot;AddSubtract.plus&quot;,x=-160.0,y=-300.0,index=2}, tail={id=&quot;relation6.vertex1&quot;,x=-380.0,y=-365.0}, points={-205.0,-315.0,-205.0,-405.0,-380.0,-405.0} } }">
            </property>
        </relation>
        <relation name="relation" class="ptolemy.actor.TypedIORelation">
            <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;TimeDelay.input&quot;,x=-55.0,y=-300.0}, tail={id=&quot;AddSubtract.output&quot;,x=-160.0,y=-300.0}, points={} } }">
            </property>
        </relation>
        <relation name="relation2" class="ptolemy.actor.TypedIORelation">
            <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;Register.input&quot;,x=15.0,y=-300.0}, tail={id=&quot;TimeDelay.output&quot;,x=-55.0,y=-300.0}, points={} } }">
            </property>
        </relation>
        <relation name="relation4" class="ptolemy.actor.TypedIORelation">
            <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;AddSubtract.plus&quot;,x=-160.0,y=-300.0,index=2}, tail={id=&quot;CompositeOptimizer.optimalValue&quot;,x=-305.0,y=-310.0}, points={} } }">
            </property>
        </relation>
        <link port="robotPosition" relation="relation6"/>
        <link port="searchTeamLocations" relation="relation3"/>
        <link port="CompositeOptimizer.optimalValue" relation="relation4"/>
        <link port="CompositeOptimizer.intruderPosition" relation="relation6"/>
        <link port="CompositeOptimizer.port" relation="relation3"/>
        <link port="Register.input" relation="relation2"/>
        <link port="Register.output" relation="relation6"/>
        <link port="Register.trigger" relation="relation3"/>
        <link port="TimeDelay.input" relation="relation"/>
        <link port="TimeDelay.output" relation="relation2"/>
        <link port="AddSubtract.plus" relation="relation6"/>
        <link port="AddSubtract.plus" relation="relation4"/>
        <link port="AddSubtract.output" relation="relation"/>
    </entity>
    <entity name="ArrayToElements5" class="ptolemy.actor.lib.ArrayToElements">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[1138.4677429199219, 370.5]">
        </property>
    </entity>
    <entity name="ArrayToElements" class="ptolemy.actor.lib.ArrayToElements">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[1143.4677429199219, 95.5]">
        </property>
    </entity>
    <entity name="KeyValueStore" class="org.terraswarm.accessor.JSAccessor">
        <property name="script" class="ptolemy.actor.parameters.PortParameter" value="&#10;    // &#10;function fire() {&#10;    var store = get('storeLocation');&#10;    var theKey = get('key');&#10;    var toRemove = get('remove');&#10;    var theValue = get('value');&#10;    var url = store + '/get?id=' + theKey;&#10;    var produce;&#10;    if (toRemove) {&#10;       if (theKey != &quot;&quot;) {&#10;           produce = readURL(url);&#10;           url = store + '/delete?id=' + theKey;&#10;           readURL(url);&#10;           if (produce != &quot;&quot;) {&#10;               send('result', produce);&#10;           }&#10;        }&#10;    } else {&#10;        // toRemove == false. If there is a value, use it to set.&#10;        if (theValue != &quot;&quot;) {&#10;            // FIXME: Escape theValue to make a valid URL.&#10;            url = store + '/set?id=' + encodeURIComponent(theKey) + '&amp;value=' + encodeURIComponent(theValue);&#10;            readURL(url);&#10;            send('result', theValue);&#10;        } else {&#10;            var valueFromStore = decodeURIComponent(readURL(url));&#10;            send('result', valueFromStore);&#10;        }&#10;    }&#10;}&#10;    // &#10;  ">
        </property>
        <property name="accessorSource" class="org.terraswarm.accessor.JSAccessor$ActionableAttribute" value="https://www.terraswarm.org/accessors/net/KeyValueStore.xml">
        </property>
        <property name="documentation" class="ptolemy.vergil.basic.DocAttribute">
            <property name="description" class="ptolemy.kernel.util.StringAttribute" value="&#10;    &#10;This accessor reads or writes data to a key-value store web service.&#10;The key and the value are both encoded using the JavaScript encodeURIComponent() function,&#10;and on retrieval, decoded using decodeURIComponent().&#10;If &lt;i&gt;remove&lt;/i&gt; is true and the &lt;i&gt;key&lt;/i&gt; is non-empty, then upon firing, this actor&#10;will remove the specified key from the store, producing on its output the previous&#10;value (if any).&#10;&lt;p&gt;&#10;This accessor assumes that the protocol implemented at that location matches&#10;the specification below for the default location:&#10;&lt;ul&gt;&#10;&lt;li&gt;To store a value with key MY_ID and value MY_VALUE, use&#10;&lt;pre&gt;&#10;   http://ptango.eecs.berkeley.edu:8077/keyvalue/set?id=MY_ID&amp;value=MY_VALUE&#10;&lt;/pre&gt;&#10;&lt;/li&gt;&#10;&lt;li&gt;To retrieve the value, use&#10;&lt;pre&gt;&#10;   http://ptango.eecs.berkeley.edu:8077/keyvalue/get?id=MY_ID&#10;&lt;/pre&gt;&#10;&lt;/li&gt;&#10;&lt;li&gt;To remove a value, use&#10;&lt;pre&gt;&#10;   http://ptango.eecs.berkeley.edu:8077/keyvalue/delete?id=MY_ID&#10;&lt;/pre&gt;&#10;&lt;/li&gt;&#10;&lt;li&gt;To list all keys (a JSON array of strings), use&#10;&lt;pre&gt;&#10;   http://ptango.eecs.berkeley.edu:8077/keyvalue/list&#10;&lt;/pre&gt;&#10;&lt;/li&gt;&#10;&lt;p&gt;&#10;A Ptolemy II model that provides such a key-value store service is provided&#10;at &lt;a href=&quot;https://www.terraswarm.org/accessors/demo/KeyValueStore/KeyValueStore.xml&quot;&gt;&#10;https://www.terraswarm.org/accessors/demo/KeyValueStore/KeyValueStore.xml&lt;/a&gt;.&#10;A demo client that uses this accessor is provided at&#10;&lt;a href=&quot;https://www.terraswarm.org/accessors/demo/KeyValueStore/KeyValueStoreClient.xml&quot;&gt;&#10;https://www.terraswarm.org/accessors/demo/KeyValueStore/KeyValueStoreClient.xml&lt;/a&gt;.&#10;&lt;/ul&gt;&#10;	&#10;  ">
            </property>
            <property name="author" class="ptolemy.kernel.util.StringAttribute" value="Edward A. Lee">
            </property>
            <property name="version" class="ptolemy.kernel.util.StringAttribute" value="0.1">
            </property>
            <property name="error (port)" class="ptolemy.kernel.util.StringAttribute" value="The error message if an error occurs. If this port is not connected and an error occurs, then an exception is thrown instead.">
            </property>
            <property name="storeLocation (port-parameter)" class="ptolemy.kernel.util.StringAttribute">
            </property>
            <property name="key (port-parameter)" class="ptolemy.kernel.util.StringAttribute" value="Key to be updated or retrieved.">
            </property>
            <property name="remove (port-parameter)" class="ptolemy.kernel.util.StringAttribute" value="If true, then remove the key from the store; otherwise, retrieve the value for the key.">
            </property>
            <property name="value (port-parameter)" class="ptolemy.kernel.util.StringAttribute" value="Value to store in the key-value store, or empty to not store anything.">
            </property>
            <property name="result (port)" class="ptolemy.kernel.util.StringAttribute" value="Value retrieved from or written to the key-value store.">
            </property>
            <property name="key (port)" class="ptolemy.kernel.util.StringAttribute" value="Key to be updated or retrieved.">
            </property>
            <property name="value (port)" class="ptolemy.kernel.util.StringAttribute" value="Value to store in the key-value store, or empty to not store anything.">
            </property>
        </property>
        <property name="storeLocation" class="ptolemy.actor.parameters.PortParameter" value="storeLocation">
        </property>
        <property name="key" class="ptolemy.actor.parameters.PortParameter" value="intruderName">
        </property>
        <property name="remove" class="ptolemy.actor.parameters.PortParameter" value="false">
        </property>
        <property name="value" class="ptolemy.actor.parameters.PortParameter" value="&quot;[-24.051933776659187,16.684631551300427]&quot;">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[943.4677429199219, 95.5]">
        </property>
        <port name="storeLocation" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
        <port name="key" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
            <property name="_type" class="ptolemy.actor.TypeAttribute" value="string">
            </property>
        </port>
        <port name="remove" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
        <port name="value" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
            <property name="_type" class="ptolemy.actor.TypeAttribute" value="string">
            </property>
        </port>
        <port name="result" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_type" class="ptolemy.actor.TypeAttribute" value="string">
            </property>
        </port>
    </entity>
    <entity name="TokenToJSON" class="ptolemy.actor.lib.conversions.json.TokenToJSON">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[793.4677429199219, 115.5]">
        </property>
    </entity>
    <entity name="JSONToToken5" class="ptolemy.actor.lib.conversions.json.JSONToToken">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[1038.4677429199219, 95.5]">
        </property>
    </entity>
    <entity name="InstanceOfKVtoArray" class="KVtoArray">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[73.46774291992188, 90.5]">
        </property>
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={256, 134, 739, 634}, maximized=false}">
        </property>
        <entity name="KeyValueStore" class="org.terraswarm.accessor.JSAccessor">
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="&#10;    // &#10;function fire() {&#10;    var store = get('storeLocation');&#10;    var theKey = get('key');&#10;    var toRemove = get('remove');&#10;    var theValue = get('value');&#10;    var url = store + '/get?id=' + theKey;&#10;    var produce;&#10;    if (toRemove) {&#10;       if (theKey != &quot;&quot;) {&#10;           produce = readURL(url);&#10;           url = store + '/delete?id=' + theKey;&#10;           readURL(url);&#10;           if (produce != &quot;&quot;) {&#10;               send('result', produce);&#10;           }&#10;        }&#10;    } else {&#10;        // toRemove == false. If there is a value, use it to set.&#10;        if (theValue != &quot;&quot;) {&#10;            // FIXME: Escape theValue to make a valid URL.&#10;            url = store + '/set?id=' + encodeURIComponent(theKey) + '&amp;value=' + encodeURIComponent(theValue);&#10;            readURL(url);&#10;            send('result', theValue);&#10;        } else {&#10;            var valueFromStore = decodeURIComponent(readURL(url));&#10;            send('result', valueFromStore);&#10;        }&#10;    }&#10;}&#10;    // &#10;  ">
            </property>
            <property name="remove" class="ptolemy.actor.parameters.PortParameter" value="false">
            </property>
        </entity>
        <relation name="relation5" class="ptolemy.actor.TypedIORelation">
            <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;JSONToToken.input&quot;,x=325.0,y=115.0}, tail={id=&quot;KeyValueStore.result&quot;,x=225.0,y=115.0}, points={} } }">
            </property>
        </relation>
        <relation name="relation" class="ptolemy.actor.TypedIORelation">
            <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;Const.output&quot;,x=110.0,y=125.0}, tail={id=&quot;KeyValueStore.remove&quot;,x=225.0,y=115.0}, points={} } }">
            </property>
        </relation>
    </entity>
    <entity name="InstanceOfKVtoArray2" class="KVtoArray">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[68.46774291992188, 245.5]">
        </property>
        <property name="key" class="ptolemy.data.expr.Parameter" value="teamNames(2)">
        </property>
        <entity name="KeyValueStore" class="org.terraswarm.accessor.JSAccessor">
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="&#10;    // &#10;function fire() {&#10;    var store = get('storeLocation');&#10;    var theKey = get('key');&#10;    var toRemove = get('remove');&#10;    var theValue = get('value');&#10;    var url = store + '/get?id=' + theKey;&#10;    var produce;&#10;    if (toRemove) {&#10;       if (theKey != &quot;&quot;) {&#10;           produce = readURL(url);&#10;           url = store + '/delete?id=' + theKey;&#10;           readURL(url);&#10;           if (produce != &quot;&quot;) {&#10;               send('result', produce);&#10;           }&#10;        }&#10;    } else {&#10;        // toRemove == false. If there is a value, use it to set.&#10;        if (theValue != &quot;&quot;) {&#10;            // FIXME: Escape theValue to make a valid URL.&#10;            url = store + '/set?id=' + encodeURIComponent(theKey) + '&amp;value=' + encodeURIComponent(theValue);&#10;            readURL(url);&#10;            send('result', theValue);&#10;        } else {&#10;            var valueFromStore = decodeURIComponent(readURL(url));&#10;            send('result', valueFromStore);&#10;        }&#10;    }&#10;}&#10;    // &#10;  ">
            </property>
            <property name="remove" class="ptolemy.actor.parameters.PortParameter" value="false">
            </property>
        </entity>
        <relation name="relation5" class="ptolemy.actor.TypedIORelation">
            <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;JSONToToken.input&quot;,x=325.0,y=115.0}, tail={id=&quot;KeyValueStore.result&quot;,x=225.0,y=115.0}, points={} } }">
            </property>
        </relation>
        <relation name="relation" class="ptolemy.actor.TypedIORelation">
            <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;Const.output&quot;,x=110.0,y=125.0}, tail={id=&quot;KeyValueStore.remove&quot;,x=225.0,y=115.0}, points={} } }">
            </property>
        </relation>
    </entity>
    <entity name="InstanceOfKVtoArray3" class="KVtoArray">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[68.46774291992188, 305.5]">
        </property>
        <property name="key" class="ptolemy.data.expr.Parameter" value="teamNames(3)">
        </property>
        <entity name="KeyValueStore" class="org.terraswarm.accessor.JSAccessor">
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="&#10;    // &#10;function fire() {&#10;    var store = get('storeLocation');&#10;    var theKey = get('key');&#10;    var toRemove = get('remove');&#10;    var theValue = get('value');&#10;    var url = store + '/get?id=' + theKey;&#10;    var produce;&#10;    if (toRemove) {&#10;       if (theKey != &quot;&quot;) {&#10;           produce = readURL(url);&#10;           url = store + '/delete?id=' + theKey;&#10;           readURL(url);&#10;           if (produce != &quot;&quot;) {&#10;               send('result', produce);&#10;           }&#10;        }&#10;    } else {&#10;        // toRemove == false. If there is a value, use it to set.&#10;        if (theValue != &quot;&quot;) {&#10;            // FIXME: Escape theValue to make a valid URL.&#10;            url = store + '/set?id=' + encodeURIComponent(theKey) + '&amp;value=' + encodeURIComponent(theValue);&#10;            readURL(url);&#10;            send('result', theValue);&#10;        } else {&#10;            var valueFromStore = decodeURIComponent(readURL(url));&#10;            send('result', valueFromStore);&#10;        }&#10;    }&#10;}&#10;    // &#10;  ">
            </property>
            <property name="remove" class="ptolemy.actor.parameters.PortParameter" value="false">
            </property>
        </entity>
        <relation name="relation5" class="ptolemy.actor.TypedIORelation">
            <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;JSONToToken.input&quot;,x=325.0,y=115.0}, tail={id=&quot;KeyValueStore.result&quot;,x=225.0,y=115.0}, points={} } }">
            </property>
        </relation>
        <relation name="relation" class="ptolemy.actor.TypedIORelation">
            <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;Const.output&quot;,x=110.0,y=125.0}, tail={id=&quot;KeyValueStore.remove&quot;,x=225.0,y=115.0}, points={} } }">
            </property>
        </relation>
    </entity>
    <entity name="InstanceOfKVtoArray4" class="KVtoArray">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[68.46774291992188, 370.5]">
        </property>
        <property name="key" class="ptolemy.data.expr.Parameter" value="teamNames(0)">
        </property>
        <entity name="KeyValueStore" class="org.terraswarm.accessor.JSAccessor">
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="&#10;    // &#10;function fire() {&#10;    var store = get('storeLocation');&#10;    var theKey = get('key');&#10;    var toRemove = get('remove');&#10;    var theValue = get('value');&#10;    var url = store + '/get?id=' + theKey;&#10;    var produce;&#10;    if (toRemove) {&#10;       if (theKey != &quot;&quot;) {&#10;           produce = readURL(url);&#10;           url = store + '/delete?id=' + theKey;&#10;           readURL(url);&#10;           if (produce != &quot;&quot;) {&#10;               send('result', produce);&#10;           }&#10;        }&#10;    } else {&#10;        // toRemove == false. If there is a value, use it to set.&#10;        if (theValue != &quot;&quot;) {&#10;            // FIXME: Escape theValue to make a valid URL.&#10;            url = store + '/set?id=' + encodeURIComponent(theKey) + '&amp;value=' + encodeURIComponent(theValue);&#10;            readURL(url);&#10;            send('result', theValue);&#10;        } else {&#10;            var valueFromStore = decodeURIComponent(readURL(url));&#10;            send('result', valueFromStore);&#10;        }&#10;    }&#10;}&#10;    // &#10;  ">
            </property>
            <property name="remove" class="ptolemy.actor.parameters.PortParameter" value="false">
            </property>
        </entity>
        <relation name="relation5" class="ptolemy.actor.TypedIORelation">
            <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;JSONToToken.input&quot;,x=325.0,y=115.0}, tail={id=&quot;KeyValueStore.result&quot;,x=225.0,y=115.0}, points={} } }">
            </property>
        </relation>
        <relation name="relation" class="ptolemy.actor.TypedIORelation">
            <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;Const.output&quot;,x=110.0,y=125.0}, tail={id=&quot;KeyValueStore.remove&quot;,x=225.0,y=115.0}, points={} } }">
            </property>
        </relation>
    </entity>
    <entity name="XYScope" class="ptolemy.actor.lib.gui.XYScope">
        <property name="fillOnWrapup" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="legend" class="ptolemy.kernel.util.StringAttribute" value="intruder,t0,t1,t2,t3,t4,t5,t6">
        </property>
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={42, 22, 873, 874}, maximized=false}">
        </property>
        <property name="_plotSize" class="ptolemy.actor.gui.SizeAttribute" value="[873, 830]">
        </property>
        <property name="persistence" class="ptolemy.data.expr.Parameter" value="50">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[1398.4677429199219, 125.5]">
        </property>
        <configure>
<?plotml <!DOCTYPE plot PUBLIC "-//UC Berkeley//DTD PlotML 1//EN"
"http://ptolemy.eecs.berkeley.edu/xml/dtd/PlotML_1.dtd">
<plot>
<title>Robot Positions</title>
<xLabel></xLabel>
<yLabel></yLabel>
<xRange min="-1059.4853475983339" max="17.01455472628483"/>
<yRange min="-408.48004374914757" max="35.24144674041744"/>
<default connected="no" marks="various"/>
</plot>?>
        </configure>
    </entity>
    <entity name="InstanceOfKVtoArray5" class="KVtoArray">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[68.46774291992188, 515.5]">
        </property>
        <property name="key" class="ptolemy.data.expr.Parameter" value="teamNames(4)">
        </property>
        <entity name="KeyValueStore" class="org.terraswarm.accessor.JSAccessor">
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="&#10;    // &#10;function fire() {&#10;    var store = get('storeLocation');&#10;    var theKey = get('key');&#10;    var toRemove = get('remove');&#10;    var theValue = get('value');&#10;    var url = store + '/get?id=' + theKey;&#10;    var produce;&#10;    if (toRemove) {&#10;       if (theKey != &quot;&quot;) {&#10;           produce = readURL(url);&#10;           url = store + '/delete?id=' + theKey;&#10;           readURL(url);&#10;           if (produce != &quot;&quot;) {&#10;               send('result', produce);&#10;           }&#10;        }&#10;    } else {&#10;        // toRemove == false. If there is a value, use it to set.&#10;        if (theValue != &quot;&quot;) {&#10;            // FIXME: Escape theValue to make a valid URL.&#10;            url = store + '/set?id=' + encodeURIComponent(theKey) + '&amp;value=' + encodeURIComponent(theValue);&#10;            readURL(url);&#10;            send('result', theValue);&#10;        } else {&#10;            var valueFromStore = decodeURIComponent(readURL(url));&#10;            send('result', valueFromStore);&#10;        }&#10;    }&#10;}&#10;    // &#10;  ">
            </property>
            <property name="remove" class="ptolemy.actor.parameters.PortParameter" value="false">
            </property>
        </entity>
        <relation name="relation5" class="ptolemy.actor.TypedIORelation">
            <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;JSONToToken.input&quot;,x=325.0,y=115.0}, tail={id=&quot;KeyValueStore.result&quot;,x=225.0,y=115.0}, points={} } }">
            </property>
        </relation>
        <relation name="relation" class="ptolemy.actor.TypedIORelation">
            <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;Const.output&quot;,x=110.0,y=125.0}, tail={id=&quot;KeyValueStore.remove&quot;,x=225.0,y=115.0}, points={} } }">
            </property>
        </relation>
    </entity>
    <entity name="InstanceOfKVtoArray6" class="KVtoArray">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[68.46774291992188, 455.5]">
        </property>
        <property name="key" class="ptolemy.data.expr.Parameter" value="teamNames(5)">
        </property>
        <entity name="KeyValueStore" class="org.terraswarm.accessor.JSAccessor">
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="&#10;    // &#10;function fire() {&#10;    var store = get('storeLocation');&#10;    var theKey = get('key');&#10;    var toRemove = get('remove');&#10;    var theValue = get('value');&#10;    var url = store + '/get?id=' + theKey;&#10;    var produce;&#10;    if (toRemove) {&#10;       if (theKey != &quot;&quot;) {&#10;           produce = readURL(url);&#10;           url = store + '/delete?id=' + theKey;&#10;           readURL(url);&#10;           if (produce != &quot;&quot;) {&#10;               send('result', produce);&#10;           }&#10;        }&#10;    } else {&#10;        // toRemove == false. If there is a value, use it to set.&#10;        if (theValue != &quot;&quot;) {&#10;            // FIXME: Escape theValue to make a valid URL.&#10;            url = store + '/set?id=' + encodeURIComponent(theKey) + '&amp;value=' + encodeURIComponent(theValue);&#10;            readURL(url);&#10;            send('result', theValue);&#10;        } else {&#10;            var valueFromStore = decodeURIComponent(readURL(url));&#10;            send('result', valueFromStore);&#10;        }&#10;    }&#10;}&#10;    // &#10;  ">
            </property>
            <property name="remove" class="ptolemy.actor.parameters.PortParameter" value="false">
            </property>
        </entity>
        <relation name="relation5" class="ptolemy.actor.TypedIORelation">
            <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;JSONToToken.input&quot;,x=325.0,y=115.0}, tail={id=&quot;KeyValueStore.result&quot;,x=225.0,y=115.0}, points={} } }">
            </property>
        </relation>
        <relation name="relation" class="ptolemy.actor.TypedIORelation">
            <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;Const.output&quot;,x=110.0,y=125.0}, tail={id=&quot;KeyValueStore.remove&quot;,x=225.0,y=115.0}, points={} } }">
            </property>
        </relation>
    </entity>
    <entity name="ArrayToElements6" class="ptolemy.actor.lib.ArrayToElements">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[1138.4677429199219, 455.5]">
        </property>
    </entity>
    <entity name="ArrayToElements7" class="ptolemy.actor.lib.ArrayToElements">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[1138.4677429199219, 515.5]">
        </property>
    </entity>
    <relation name="relation6" class="ptolemy.actor.TypedIORelation">
        <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
        </property>
        <vertex name="vertex1" value="[-1.532257080078125, 370.5]">
        </vertex>
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;DiscreteClock.output&quot;,x=-66.53225708007812,y=370.5}, tail={id=&quot;relation6.vertex1&quot;,x=-1.532257080078125,y=370.5}, points={} },{ head={id=&quot;InstanceOfKVtoArray.trigger&quot;,x=73.46774291992188,y=90.5}, tail={id=&quot;relation6.vertex1&quot;,x=-1.532257080078125,y=370.5}, points={-1.532257080078125,90.5} },{ head={id=&quot;InstanceOfKVtoArray2.trigger&quot;,x=68.46774291992188,y=245.5}, tail={id=&quot;relation6.vertex1&quot;,x=-1.532257080078125,y=370.5}, points={-1.532257080078125,245.5} },{ head={id=&quot;InstanceOfKVtoArray3.trigger&quot;,x=68.46774291992188,y=305.5}, tail={id=&quot;relation6.vertex1&quot;,x=-1.532257080078125,y=370.5}, points={-1.532257080078125,305.5} },{ head={id=&quot;InstanceOfKVtoArray4.trigger&quot;,x=68.46774291992188,y=370.5}, tail={id=&quot;relation6.vertex1&quot;,x=-1.532257080078125,y=370.5}, points={} },{ head={id=&quot;InstanceOfKVtoArray5.trigger&quot;,x=68.46774291992188,y=515.5}, tail={id=&quot;relation6.vertex1&quot;,x=-1.532257080078125,y=370.5}, points={-1.532257080078125,515.5} },{ head={id=&quot;InstanceOfKVtoArray6.trigger&quot;,x=68.46774291992188,y=455.5}, tail={id=&quot;relation6.vertex1&quot;,x=-1.532257080078125,y=370.5}, points={-1.532257080078125,455.5} },{ head={id=&quot;InstanceOfKVtoArray7.trigger&quot;,x=68.46774291992188,y=580.5}, tail={id=&quot;relation6.vertex1&quot;,x=-1.532257080078125,y=370.5}, points={-1.532257080078125,580.5} } }">
        </property>
    </relation>
    <relation name="relation14" class="ptolemy.actor.TypedIORelation">
        <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
        </property>
        <vertex name="vertex1" value="[173.46774291992188, 370.5]">
        </vertex>
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;ArrayToElements.input&quot;,x=1380.0,y=130.0}, tail={id=&quot;relation14.vertex1&quot;,x=325.0,y=425.0}, points={} },{ head={id=&quot;InstanceOfKVtoArray4.x&quot;,x=68.46774291992188,y=370.5}, tail={id=&quot;relation14.vertex1&quot;,x=173.46774291992188,y=370.5}, points={} },{ head={id=&quot;ArrayToElements5.input&quot;,x=1138.4677429199219,y=370.5}, tail={id=&quot;relation14.vertex1&quot;,x=173.46774291992188,y=370.5}, points={} },{ head={id=&quot;ElementsToArray.input&quot;,x=273.4677429199219,y=115.5,index=7}, tail={id=&quot;relation14.vertex1&quot;,x=173.46774291992188,y=370.5}, points={173.46774291992188,85.5} } }">
        </property>
    </relation>
    <relation name="relation10" class="ptolemy.actor.TypedIORelation">
        <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
        </property>
        <vertex name="vertex1" value="[213.46774291992188, 90.5]">
        </vertex>
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;ArrayToElements2.input&quot;,x=1138.4677429199219,y=185.5}, tail={id=&quot;relation10.vertex1&quot;,x=213.46774291992188,y=90.5}, points={213.46774291992188,185.5} },{ head={id=&quot;InstanceOfKVtoArray.x&quot;,x=73.46774291992188,y=90.5}, tail={id=&quot;relation10.vertex1&quot;,x=213.46774291992188,y=90.5}, points={} },{ head={id=&quot;ElementsToArray.input&quot;,x=273.4677429199219,y=115.5,index=7}, tail={id=&quot;relation10.vertex1&quot;,x=213.46774291992188,y=90.5}, points={} } }">
        </property>
    </relation>
    <relation name="relation19" class="ptolemy.actor.TypedIORelation">
        <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
        </property>
        <vertex name="vertex1" value="[183.46774291992188, 245.5]">
        </vertex>
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;ArrayToElements3.input&quot;,x=1138.4677429199219,y=245.5}, tail={id=&quot;relation19.vertex1&quot;,x=183.46774291992188,y=245.5}, points={} },{ head={id=&quot;InstanceOfKVtoArray2.x&quot;,x=68.46774291992188,y=245.5}, tail={id=&quot;relation19.vertex1&quot;,x=183.46774291992188,y=245.5}, points={} },{ head={id=&quot;ElementsToArray.input&quot;,x=273.4677429199219,y=115.5,index=7}, tail={id=&quot;relation19.vertex1&quot;,x=183.46774291992188,y=245.5}, points={183.46774291992188,95.5} } }">
        </property>
    </relation>
    <relation name="relation21" class="ptolemy.actor.TypedIORelation">
        <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
        </property>
        <vertex name="vertex1" value="[188.46774291992188, 305.5]">
        </vertex>
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;ArrayToElements4.input&quot;,x=1138.4677429199219,y=305.5}, tail={id=&quot;relation21.vertex1&quot;,x=188.46774291992188,y=305.5}, points={} },{ head={id=&quot;InstanceOfKVtoArray3.x&quot;,x=68.46774291992188,y=305.5}, tail={id=&quot;relation21.vertex1&quot;,x=188.46774291992188,y=305.5}, points={} },{ head={id=&quot;ElementsToArray.input&quot;,x=273.4677429199219,y=115.5,index=7}, tail={id=&quot;relation21.vertex1&quot;,x=188.46774291992188,y=305.5}, points={188.46774291992188,100.5} } }">
        </property>
    </relation>
    <relation name="relation3" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;KeyValueStore.value&quot;,x=943.4677429199219,y=95.5}, tail={id=&quot;TokenToJSON.output&quot;,x=793.4677429199219,y=115.5}, points={} } }">
        </property>
    </relation>
    <relation name="relation5" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;Intruder.robotPosition&quot;,x=563.4677429199219,y=115.5}, tail={id=&quot;TokenToJSON.input&quot;,x=793.4677429199219,y=115.5}, points={} } }">
        </property>
    </relation>
    <relation name="relation17" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;ArrayToElements.input&quot;,x=1143.4677429199219,y=95.5}, tail={id=&quot;JSONToToken5.output&quot;,x=1038.4677429199219,y=95.5}, points={} } }">
        </property>
    </relation>
    <relation name="relation16" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;KeyValueStore.result&quot;,x=943.4677429199219,y=95.5}, tail={id=&quot;JSONToToken5.input&quot;,x=1038.4677429199219,y=95.5}, points={} } }">
        </property>
    </relation>
    <relation name="relation" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;ElementsToArray.output&quot;,x=273.4677429199219,y=115.5}, tail={id=&quot;Intruder.searchTeamLocations&quot;,x=563.4677429199219,y=115.5}, points={} } }">
        </property>
    </relation>
    <relation name="relation2" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation4" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation7" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation8" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation9" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation11" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation12" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation13" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation15" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation18" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation24" class="ptolemy.actor.TypedIORelation">
        <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
        </property>
        <vertex name="vertex1" value="[203.46774291992188, 455.5]">
        </vertex>
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;ArrayToElements6.input&quot;,x=1138.4677429199219,y=455.5}, tail={id=&quot;relation24.vertex1&quot;,x=203.46774291992188,y=455.5}, points={} },{ head={id=&quot;InstanceOfKVtoArray6.x&quot;,x=68.46774291992188,y=455.5}, tail={id=&quot;relation24.vertex1&quot;,x=203.46774291992188,y=455.5}, points={} },{ head={id=&quot;ElementsToArray.input&quot;,x=273.4677429199219,y=115.5,index=7}, tail={id=&quot;relation24.vertex1&quot;,x=203.46774291992188,y=455.5}, points={203.46774291992188,110.5} } }">
        </property>
    </relation>
    <relation name="relation22" class="ptolemy.actor.TypedIORelation">
        <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
        </property>
        <vertex name="vertex1" value="[193.46774291992188, 515.5]">
        </vertex>
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;ArrayToElements7.input&quot;,x=1138.4677429199219,y=515.5}, tail={id=&quot;relation22.vertex1&quot;,x=193.46774291992188,y=515.5}, points={} },{ head={id=&quot;InstanceOfKVtoArray5.x&quot;,x=68.46774291992188,y=515.5}, tail={id=&quot;relation22.vertex1&quot;,x=193.46774291992188,y=515.5}, points={} },{ head={id=&quot;ElementsToArray.input&quot;,x=273.4677429199219,y=115.5,index=7}, tail={id=&quot;relation22.vertex1&quot;,x=193.46774291992188,y=515.5}, points={193.46774291992188,105.5} } }">
        </property>
    </relation>
    <relation name="relation20" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation25" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation26" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation27" class="ptolemy.actor.TypedIORelation">
    </relation>
    <link port="DiscreteClock.output" relation="relation6"/>
    <link port="ElementsToArray.input" relation="relation14"/>
    <link port="ElementsToArray.input" relation="relation10"/>
    <link port="ElementsToArray.input" relation="relation19"/>
    <link port="ElementsToArray.input" relation="relation21"/>
    <link port="ElementsToArray.input" relation="relation22"/>
    <link port="ElementsToArray.input" relation="relation24"/>
    <link port="ElementsToArray.output" relation="relation"/>
    <link port="ArrayToElements2.input" relation="relation10"/>
    <link port="ArrayToElements2.output" relation="relation4"/>
    <link port="ArrayToElements2.output" relation="relation12"/>
    <link port="ArrayToElements3.input" relation="relation19"/>
    <link port="ArrayToElements3.output" relation="relation7"/>
    <link port="ArrayToElements3.output" relation="relation13"/>
    <link port="ArrayToElements4.input" relation="relation21"/>
    <link port="ArrayToElements4.output" relation="relation8"/>
    <link port="ArrayToElements4.output" relation="relation15"/>
    <link port="Intruder.robotPosition" relation="relation5"/>
    <link port="Intruder.searchTeamLocations" relation="relation"/>
    <link port="ArrayToElements5.input" relation="relation14"/>
    <link port="ArrayToElements5.output" relation="relation9"/>
    <link port="ArrayToElements5.output" relation="relation18"/>
    <link port="ArrayToElements.input" relation="relation17"/>
    <link port="ArrayToElements.output" relation="relation2"/>
    <link port="ArrayToElements.output" relation="relation11"/>
    <link port="KeyValueStore.value" relation="relation3"/>
    <link port="KeyValueStore.result" relation="relation16"/>
    <link port="TokenToJSON.input" relation="relation5"/>
    <link port="TokenToJSON.output" relation="relation3"/>
    <link port="JSONToToken5.input" relation="relation16"/>
    <link port="JSONToToken5.output" relation="relation17"/>
    <link port="InstanceOfKVtoArray.x" relation="relation10"/>
    <link port="InstanceOfKVtoArray.trigger" relation="relation6"/>
    <link port="InstanceOfKVtoArray2.x" relation="relation19"/>
    <link port="InstanceOfKVtoArray2.trigger" relation="relation6"/>
    <link port="InstanceOfKVtoArray3.x" relation="relation21"/>
    <link port="InstanceOfKVtoArray3.trigger" relation="relation6"/>
    <link port="InstanceOfKVtoArray4.x" relation="relation14"/>
    <link port="InstanceOfKVtoArray4.trigger" relation="relation6"/>
    <link port="XYScope.inputX" relation="relation2"/>
    <link port="XYScope.inputX" relation="relation4"/>
    <link port="XYScope.inputX" relation="relation7"/>
    <link port="XYScope.inputX" relation="relation8"/>
    <link port="XYScope.inputX" relation="relation9"/>
    <link port="XYScope.inputX" relation="relation20"/>
    <link port="XYScope.inputX" relation="relation26"/>
    <link port="XYScope.inputY" relation="relation11"/>
    <link port="XYScope.inputY" relation="relation12"/>
    <link port="XYScope.inputY" relation="relation13"/>
    <link port="XYScope.inputY" relation="relation15"/>
    <link port="XYScope.inputY" relation="relation18"/>
    <link port="XYScope.inputY" relation="relation25"/>
    <link port="XYScope.inputY" relation="relation27"/>
    <link port="InstanceOfKVtoArray5.x" relation="relation22"/>
    <link port="InstanceOfKVtoArray5.trigger" relation="relation6"/>
    <link port="InstanceOfKVtoArray6.x" relation="relation24"/>
    <link port="InstanceOfKVtoArray6.trigger" relation="relation6"/>
    <link port="ArrayToElements6.input" relation="relation24"/>
    <link port="ArrayToElements6.output" relation="relation20"/>
    <link port="ArrayToElements6.output" relation="relation25"/>
    <link port="ArrayToElements7.input" relation="relation22"/>
    <link port="ArrayToElements7.output" relation="relation26"/>
    <link port="ArrayToElements7.output" relation="relation27"/>
</entity>
