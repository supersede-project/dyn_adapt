<?xml version="1.0" standalone="no"?>
<!DOCTYPE entity PUBLIC "-//UC Berkeley//DTD MoML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/MoML_1.dtd">
<entity name="PassthroughTest" class="ptolemy.actor.TypedCompositeActor">
    <property name="_createdBy" class="ptolemy.kernel.attributes.VersionAttribute" value="11.0.devel">
    </property>
    <property name="DE Director" class="ptolemy.domains.de.kernel.DEDirector">
        <property name="stopWhenQueueIsEmpty" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <property name="synchronizeToRealTime" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[70.0, 65.0]">
        </property>
    </property>
    <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={156, 135, 934, 634}, maximized=false}">
    </property>
    <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[700, 524]">
    </property>
    <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="0.8000000000000002">
    </property>
    <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{339.99999999999983, 251.99999999999983}">
    </property>
    <property name="HelloCount" class="ptolemy.data.expr.Parameter" value="5">
        <property name="_hideName" class="ptolemy.kernel.util.SingletonAttribute">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.ValueIcon">
            <property name="_color" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 1.0, 1.0}">
            </property>
        </property>
        <property name="_smallIconDescription" class="ptolemy.kernel.util.SingletonConfigurableAttribute">
            <configure>
      <svg>
        <text x="20" style="font-size:14; font-family:SansSerif; fill:blue" y="20">-P-</text>
      </svg>
    </configure>
        </property>
        <property name="_editorFactory" class="ptolemy.vergil.toolbox.VisibleParameterEditorFactory">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[145.0, 65.0]">
        </property>
    </property>
    <property name="HelloEmitted" class="ptolemy.data.expr.Parameter" value="5">
        <property name="_hideName" class="ptolemy.kernel.util.SingletonAttribute">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.ValueIcon">
            <property name="_color" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 1.0, 1.0}">
            </property>
        </property>
        <property name="_smallIconDescription" class="ptolemy.kernel.util.SingletonConfigurableAttribute">
            <configure>
      <svg>
        <text x="20" style="font-size:14; font-family:SansSerif; fill:blue" y="20">-P-</text>
      </svg>
    </configure>
        </property>
        <property name="_editorFactory" class="ptolemy.vergil.toolbox.VisibleParameterEditorFactory">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[265.0, 65.0]">
        </property>
    </property>
    <entity name="Const" class="ptolemy.actor.lib.Const">
        <property name="value" class="ptolemy.data.expr.Parameter" value="&quot;hello&quot;">
        </property>
        <doc>Create a constant sequence.</doc>
        <property name="_icon" class="ptolemy.vergil.icon.BoxedValueIcon">
            <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="value">
            </property>
            <property name="displayWidth" class="ptolemy.data.expr.Parameter" value="60">
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[135.0, 135.0]">
        </property>
    </entity>
    <entity name="DiscreteClock" class="ptolemy.actor.lib.DiscreteClock">
        <property name="stopTime" class="ptolemy.data.expr.Parameter" value="1.0">
        </property>
        <property name="period" class="ptolemy.actor.parameters.PortParameter" value="0.2">
        </property>
        <doc>Create periodic timed events.</doc>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[40.0, 135.0]">
        </property>
    </entity>
    <entity name="Exec" class="org.terraswarm.accessor.JSAccessor">
        <property name="script" class="ptolemy.actor.parameters.PortParameter" value="&#10;/** Exec starts a shell command and connects to the process' stdin and stdout.&#10; * This accessor implements an interface to the shell of the host. It takes a&#10; * command and starts it as a process. It connects the process' stdin and &#10; * stdout to the accessor ports with the same name.&#10; * FIXME: Provide a selection of shells (e.g., bash, awk, etc)&#10; *&#10; *  @accessor utilities/Exec&#10; *  @author Armin Wasicek (arminw@berkeley.edu)&#10; *  @input {string} stdin The stdin of the executing process. A token received on this&#10; *        port is interpreted as a line entered in stdin of the process.&#10; *  @output {string} stdout The stdout of the executing process. Each line read from the &#10; *        executing process is sent out as a token from this port.&#10; *  @parameter {string} command The command to be executed.&#10; *  @version $$Id$$&#10; */&#10;&#10;// Stop extra messages from jslint and jshint.  Note that there should be no&#10;// space between the / and the * and global. See https://chess.eecs.berkeley.edu/ptexternal/wiki/Main/JSHint */&#10;/*globals addInputHandler, exports, get, input, output, require, send */&#10;/*jshint globalstrict: true*/&#10;&quot;use strict&quot;;&#10;&#10;// This accessor requires the 'shell' module, which may or may&#10;// not be provided by an accessor host. As this is a very powerful &#10;// module, not all host may provide this module for security reasons.&#10;var shell = require('shell/shell');&#10;&#10;/** Global object to the shell module provided by the host. */&#10;var sh = null;&#10;&#10;/** Set up the accessor by defining the inputs and outputs.&#10; */&#10;exports.setup = function() {&#10;	this.input('stdin', {&#10;		'type': 'string'&#10;	});&#10;	this.output('stdout', {&#10;		'type': 'string'&#10;	});&#10;    this.input('command', {&#10;        'value': 'ls',&#10;        'type':'string'&#10;    });&#10;};&#10;&#10;/** Initialize the accessor and start the process subsequently.&#10; */&#10;exports.initialize = function() {&#10;	sh = new shell.Shell({'cmd' : this.get('command')});&#10;	&#10;	var self = this;&#10;	&#10;	this.addInputHandler('stdin', function() {&#10;	    var data = self.get('stdin');&#10;	    if (data) {&#10;		  sh.write(data);&#10;	    }&#10;	});&#10;&#10;	sh.on('message', function(data) {&#10;		if(data)  {&#10;			self.send('stdout', data.toString());&#10;		}		&#10;	});&#10;&#10;	sh.start();&#10;};&#10;	&#10;/** Wrap up the execution of the accessor by stopping the process.&#10; */&#10;exports.wrapup = function() {&#10;	if(sh)  {&#10;		sh.wrapup();&#10;	}&#10;};&#10;">
        </property>
        <property name="accessorSource" class="org.terraswarm.accessor.JSAccessor$ActionableAttribute" value="https://www.terraswarm.org/accessors/utilities/Exec.js">
        </property>
        <property name="command" class="ptolemy.actor.parameters.PortParameter" value="&quot;ptolemy/actor/lib/jjs/modules/shell/test/testPassthrough.py&quot;">
            <property name="_stringMode" class="ptolemy.kernel.util.SingletonAttribute">
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[235.0, 125.0]">
        </property>
        <property name="documentation" class="ptolemy.vergil.basic.DocAttribute">
            <property name="description" class="ptolemy.kernel.util.StringAttribute" value="&lt;p&gt;Exec starts a shell command and connects to the process' stdin and stdout.&#10;This accessor implements an interface to the shell of the host. It takes a&#10;command and starts it as a process. It connects the process' stdin and &#10;stdout to the accessor ports with the same name.&#10;FIXME: Provide a selection of shells (e.g., bash, awk, etc)&lt;/p&gt;">
            </property>
            <property name="author" class="ptolemy.kernel.util.StringAttribute" value="Armin Wasicek (arminw@berkeley.edu)">
            </property>
            <property name="version" class="ptolemy.kernel.util.StringAttribute" value="$$Id$$">
            </property>
            <property name="command (port-parameter)" class="ptolemy.kernel.util.StringAttribute" value="The command to be executed.">
            </property>
            <property name="stdin (port)" class="ptolemy.kernel.util.StringAttribute" value="The stdin of the executing process. A token received on this&#10;       port is interpreted as a line entered in stdin of the process.">
            </property>
            <property name="stdout (port)" class="ptolemy.kernel.util.StringAttribute" value="The stdout of the executing process. Each line read from the &#10;       executing process is sent out as a token from this port.">
            </property>
            <property name="stdin" class="ptolemy.kernel.util.StringAttribute" value="some input">
            </property>
            <property name="stdout" class="ptolemy.kernel.util.StringAttribute" value="some output">
            </property>
            <property name="command" class="ptolemy.kernel.util.StringAttribute" value="The command to be executed.">
            </property>
            <property name="command (parameter)" class="ptolemy.kernel.util.StringAttribute" value="The command to be executed.">
            </property>
        </property>
        <port name="command" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
        <port name="stdin" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
        </port>
        <port name="stdout" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
        </port>
    </entity>
    <entity name="Ramp" class="ptolemy.actor.lib.Ramp">
        <doc>Create a sequence of tokens with increasing value</doc>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[255.0, 280.0]">
        </property>
    </entity>
    <entity name="StringCompare" class="ptolemy.actor.lib.string.StringCompare">
        <property name="firstString" class="ptolemy.actor.parameters.PortParameter" value="">
        </property>
        <property name="secondString" class="ptolemy.actor.parameters.PortParameter" value="HELLO">
        </property>
        <doc>Output a comparison function of two strings</doc>
        <property name="_icon" class="ptolemy.vergil.icon.AttributeValueIcon">
            <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="function">
            </property>
            <property name="displayWidth" class="ptolemy.data.expr.Parameter" value="10">
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[330.0, 135.0]">
        </property>
    </entity>
    <entity name="EventFilter" class="ptolemy.domains.de.lib.EventFilter">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[415.0, 135.0]">
        </property>
    </entity>
    <entity name="Ramp2" class="ptolemy.actor.lib.Ramp">
        <doc>Create a sequence of tokens with increasing value</doc>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[510.0, 145.0]">
        </property>
    </entity>
    <entity name="Test" class="ptolemy.actor.lib.Test">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[645.0, 355.0]">
        </property>
    </entity>
    <entity name="Equals" class="ptolemy.actor.lib.logic.Equals">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[540.0, 265.0]">
        </property>
    </entity>
    <relation name="relation" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation4" class="ptolemy.actor.TypedIORelation">
        <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
        </property>
        <vertex name="vertex1" value="[180.0, 135.0]">
        </vertex>
    </relation>
    <relation name="relation3" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation5" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation6" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation2" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation7" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation8" class="ptolemy.actor.TypedIORelation">
    </relation>
    <link port="Const.output" relation="relation4"/>
    <link port="Const.trigger" relation="relation"/>
    <link port="DiscreteClock.output" relation="relation"/>
    <link port="Exec.stdin" relation="relation4"/>
    <link port="Exec.stdout" relation="relation3"/>
    <link port="Ramp.output" relation="relation7"/>
    <link port="Ramp.trigger" relation="relation4"/>
    <link port="StringCompare.firstString" relation="relation3"/>
    <link port="StringCompare.output" relation="relation5"/>
    <link port="EventFilter.input" relation="relation5"/>
    <link port="EventFilter.output" relation="relation6"/>
    <link port="Ramp2.output" relation="relation2"/>
    <link port="Ramp2.trigger" relation="relation6"/>
    <link port="Test.input" relation="relation8"/>
    <link port="Equals.input" relation="relation2"/>
    <link port="Equals.input" relation="relation7"/>
    <link port="Equals.output" relation="relation8"/>
</entity>
