<?xml version="1.0" standalone="no"?>
<!DOCTYPE entity PUBLIC "-//UC Berkeley//DTD MoML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/MoML_1.dtd">
<entity name="RobotMonitor" class="ptolemy.actor.TypedCompositeActor">
    <property name="_createdBy" class="ptolemy.kernel.attributes.VersionAttribute" value="11.0.devel">
    </property>
    <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={265, 224, 910, 634}, maximized=false}">
    </property>
    <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[676, 524]">
    </property>
    <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="0.9799916080861263">
    </property>
    <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{310.955078125, 244.42878425300302}">
    </property>
    <property name="enableBackwardTypeInference" class="ptolemy.data.expr.Parameter" value="true">
    </property>
    <property name="_defaultWidthInferredTo1" class="ptolemy.data.expr.Parameter" value="true">
    </property>
    <property name="_defaultInferredWidthTo1" class="ptolemy.data.expr.Parameter" value="true">
    </property>
    <property name="storeLocation" class="ptolemy.data.expr.Parameter" value="&quot;http://localhost:8077/keyvalue&quot;">
        <property name="_hideName" class="ptolemy.kernel.util.SingletonAttribute">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.ValueIcon">
            <property name="_color" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 1.0, 1.0}">
            </property>
        </property>
        <property name="_smallIconDescription" class="ptolemy.kernel.util.SingletonConfigurableAttribute">
            <configure>
      <svg>
        <text x="20" style="font-size:14; font-family:SansSerif; fill:blue" y="20">-P-</text>
      </svg>
    </configure>
        </property>
        <property name="_editorFactory" class="ptolemy.vergil.toolbox.VisibleParameterEditorFactory">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{270.0, -10.0}">
        </property>
    </property>
    <property name="numberOfTeams" class="ptolemy.data.expr.Parameter" value="4">
        <property name="_hideName" class="ptolemy.kernel.util.SingletonAttribute">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.ValueIcon">
            <property name="_color" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 1.0, 1.0}">
            </property>
        </property>
        <property name="_smallIconDescription" class="ptolemy.kernel.util.SingletonConfigurableAttribute">
            <configure>
      <svg>
        <text x="20" style="font-size:14; font-family:SansSerif; fill:blue" y="20">-P-</text>
      </svg>
    </configure>
        </property>
        <property name="_editorFactory" class="ptolemy.vergil.toolbox.VisibleParameterEditorFactory">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{115.0, -10.0}">
        </property>
    </property>
    <property name="DE Director" class="ptolemy.domains.de.kernel.DEDirector">
        <property name="synchronizeToRealTime" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{25.0, 10.0}">
        </property>
    </property>
    <entity name="XYScope" class="ptolemy.actor.lib.gui.XYScope">
        <property name="fillOnWrapup" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="automaticRescale" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="legend" class="ptolemy.kernel.util.StringAttribute" value="intruder, 0, 1, 2, 3, 4, 5, 6">
        </property>
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={0, 23, 1008, 873}, maximized=false}">
        </property>
        <property name="_plotSize" class="ptolemy.actor.gui.SizeAttribute" value="[1008, 829]">
        </property>
        <property name="persistence" class="ptolemy.data.expr.Parameter" value="20">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{605.0, 175.0}">
        </property>
        <configure>
<?plotml <!DOCTYPE plot PUBLIC "-//UC Berkeley//DTD PlotML 1//EN"
"http://ptolemy.eecs.berkeley.edu/xml/dtd/PlotML_1.dtd">
<plot>
<title>Robot Locations</title>
<xLabel></xLabel>
<yLabel></yLabel>
<xRange min="-100.0" max="100.0"/>
<yRange min="-100.0" max="100.0"/>
<default marks="various"/>
</plot>?>
        </configure>
    </entity>
    <entity name="MultiInstanceComposite" class="ptolemy.actor.lib.hoc.MultiInstanceComposite">
        <doc>Creates multiple instances of itself</doc>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{180.0, 100.0}">
        </property>
        <property name="DE Director" class="ptolemy.domains.de.kernel.DEDirector">
            <property name="_location" class="ptolemy.kernel.util.Location" value="{60.0, 75.0}">
            </property>
        </property>
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={405, 262, 934, 634}, maximized=false}">
        </property>
        <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[700, 524]">
        </property>
        <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0">
        </property>
        <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{347.0, 298.89453125}">
        </property>
        <port name="x" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="multiport"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{450.0, 130.0}">
            </property>
        </port>
        <port name="y" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="multiport"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{450.0, 190.0}">
            </property>
        </port>
        <port name="error" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="multiport"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[240.0, 245.0]">
            </property>
        </port>
        <port name="trigger" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="multiport"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{20.0, 205.0}">
            </property>
        </port>
        <entity name="JSONToToken" class="ptolemy.actor.lib.conversions.json.JSONToToken">
            <property name="_location" class="ptolemy.kernel.util.Location" value="{230.0, 185.0}">
            </property>
        </entity>
        <entity name="ArrayToElements" class="ptolemy.actor.lib.ArrayToElements">
            <property name="_location" class="ptolemy.kernel.util.Location" value="{335.0, 185.0}">
            </property>
        </entity>
        <entity name="KeyValueStore" class="org.terraswarm.accessor.JSAccessor">
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="&#10;    // &#10;function fire() {&#10;    var store = get('storeLocation');&#10;    var theKey = get('key');&#10;    var toRemove = get('remove');&#10;    var theValue = get('value');&#10;    var url = store + '/get?id=' + theKey;&#10;    var produce;&#10;    if (toRemove) {&#10;       if (theKey != &quot;&quot;) {&#10;           produce = readURL(url);&#10;           url = store + '/delete?id=' + theKey;&#10;           readURL(url);&#10;           if (produce != &quot;&quot;) {&#10;               send('result', produce);&#10;           }&#10;        }&#10;    } else {&#10;        // toRemove == false. If there is a value, use it to set.&#10;        if (theValue != &quot;&quot;) {&#10;            // FIXME: Escape theValue to make a valid URL.&#10;            url = store + '/set?id=' + encodeURIComponent(theKey) + '&amp;value=' + encodeURIComponent(theValue);&#10;            readURL(url);&#10;            send('result', theValue);&#10;        } else {&#10;            var valueFromStore = decodeURIComponent(readURL(url));&#10;            send('result', valueFromStore);&#10;        }&#10;    }&#10;}&#10;    // &#10;  ">
            </property>
            <property name="accessorSource" class="org.terraswarm.accessor.JSAccessor$ActionableAttribute" value="https://www.terraswarm.org/accessors/net/KeyValueStore.xml">
            </property>
            <property name="documentation" class="ptolemy.vergil.basic.DocAttribute">
                <property name="description" class="ptolemy.kernel.util.StringAttribute" value="&#10;    &#10;This accessor reads or writes data to a key-value store web service.&#10;A URL for the service is specified by the &lt;i&gt;storeLocation&lt;/i&gt; parameter.&#10;A Ptolemy II model that provides such a key-value store service can be found&#10;at &lt;a href=&quot;https://www.terraswarm.org/accessors/demo/KeyValueStore/KeyValueStoreServer.xml&quot;&gt;&#10;https://www.terraswarm.org/accessors/demo/KeyValueStore/KeyValueStoreServer.xml&lt;/a&gt;.&#10;A demo client that uses this accessor is provided at&#10;&lt;a href=&quot;https://www.terraswarm.org/accessors/demo/KeyValueStore/KeyValueStoreClient.xml&quot;&gt;&#10;https://www.terraswarm.org/accessors/demo/KeyValueStore/KeyValueStoreClient.xml&lt;/a&gt;.&#10;&lt;p&gt;&#10;The key and the value are both text items provided as inputs.&#10;If &lt;i&gt;remove&lt;/i&gt; is true and the &lt;i&gt;key&lt;/i&gt; is non-empty, then upon firing, this actor&#10;will remove the specified key from the store, producing on its output the previous&#10;value (if any). If &lt;i&gt;remove&lt;/i&gt; is false, then this actor will either set or&#10;retrieve a value in the key-value store, depending on whether the&#10;and the &lt;i&gt;value&lt;/i&gt; input is non-empty. If the &lt;i&gt;value&lt;/i&gt; is non-empty, then this&#10;actor sets the value. If it is empty, then this actor retrieves the value.&#10;&lt;p&gt;&#10;If an error occurs accessing the key-value store (e.g., no store is found at the specified&#10;URL, or no value is found with the specified key),&#10;then an exception is thrown.&#10;&lt;p&gt;&#10;This accessor assumes that the protocol implemented at that location matches&#10;the specification below for the default location:&#10;&lt;ul&gt;&#10;&lt;li&gt;To store a value with key MY_ID and value MY_VALUE, use&#10;&lt;pre&gt;&#10;   http://localhost:8077/keyvalue/set?id=MY_ID&amp;value=MY_VALUE&#10;&lt;/pre&gt;&#10;&lt;/li&gt;&#10;&lt;li&gt;To retrieve the value, use&#10;&lt;pre&gt;&#10;   http://localhost:8077/keyvalue/get?id=MY_ID&#10;&lt;/pre&gt;&#10;&lt;/li&gt;&#10;&lt;li&gt;To remove a value, use&#10;&lt;pre&gt;&#10;   http://localhost:8077/keyvalue/delete?id=MY_ID&#10;&lt;/pre&gt;&#10;&lt;/li&gt;&#10;&lt;p&gt;&#10;&lt;/ul&gt;&#10;The key and value are both&#10;encoded using the JavaScript encodeURIComponent() function,&#10;and on retrieval, decoded using decodeURIComponent(),&#10;and hence can include any text characters.&#10;    &#10;  ">
                </property>
                <property name="author" class="ptolemy.kernel.util.StringAttribute" value="Edward A. Lee">
                </property>
                <property name="version" class="ptolemy.kernel.util.StringAttribute" value="0.1 $Date$">
                </property>
                <property name="error (port)" class="ptolemy.kernel.util.StringAttribute" value="The error message if an error occurs. If this port is not connected and an error occurs, then an exception is thrown instead.">
                </property>
                <property name="storeLocation (port-parameter)" class="ptolemy.kernel.util.StringAttribute">
                </property>
                <property name="key (port-parameter)" class="ptolemy.kernel.util.StringAttribute" value="Key to be updated or retrieved.">
                </property>
                <property name="remove (port-parameter)" class="ptolemy.kernel.util.StringAttribute" value="If true, then remove the key from the store; otherwise, retrieve the value for the key.">
                </property>
                <property name="value (port-parameter)" class="ptolemy.kernel.util.StringAttribute" value="Value to store in the key-value store, or empty to not store anything.">
                </property>
                <property name="result (port)" class="ptolemy.kernel.util.StringAttribute" value="Value retrieved from or written to the key-value store.">
                </property>
                <property name="key (port)" class="ptolemy.kernel.util.StringAttribute" value="Key to be updated or retrieved.">
                </property>
                <property name="value (port)" class="ptolemy.kernel.util.StringAttribute" value="Value to store in the key-value store, or empty to not store anything.">
                </property>
            </property>
            <property name="storeLocation" class="ptolemy.actor.parameters.PortParameter" value="&quot;http://localhost:8077/keyvalue&quot;">
            </property>
            <property name="key" class="ptolemy.actor.parameters.PortParameter" value="&quot;team&quot; + instance">
            </property>
            <property name="remove" class="ptolemy.actor.parameters.PortParameter" value="false">
            </property>
            <property name="value" class="ptolemy.actor.parameters.PortParameter" value="&quot;&quot;">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{135.0, 195.0}">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="string">
                </property>
            </port>
            <port name="storeLocation" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="defaultValue" class="ptolemy.data.expr.Parameter">
                </property>
            </port>
            <port name="key" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="defaultValue" class="ptolemy.data.expr.Parameter">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="string">
                </property>
            </port>
            <port name="remove" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="defaultValue" class="ptolemy.data.expr.Parameter">
                </property>
            </port>
            <port name="value" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="defaultValue" class="ptolemy.data.expr.Parameter">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="string">
                </property>
            </port>
            <port name="result" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="string">
                </property>
            </port>
        </entity>
        <relation name="relation" class="ptolemy.actor.TypedIORelation">
            <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;JSONToToken.output&quot;,x=230.0,y=185.0}, tail={id=&quot;ArrayToElements.input&quot;,x=335.0,y=185.0}, points={} } }">
            </property>
        </relation>
        <relation name="relation2" class="ptolemy.actor.TypedIORelation">
            <property name="width" class="ptolemy.data.expr.Parameter" value="1">
            </property>
            <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;x._location&quot;,x=450.0,y=130.0}, tail={id=&quot;ArrayToElements.output&quot;,x=335.0,y=185.0,index=2}, points={430.0,130.0,430.0,185.0} } }">
            </property>
        </relation>
        <relation name="relation3" class="ptolemy.actor.TypedIORelation">
            <property name="width" class="ptolemy.data.expr.Parameter" value="1">
            </property>
            <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;ArrayToElements.output&quot;,x=335.0,y=185.0,index=2}, tail={id=&quot;y._location&quot;,x=450.0,y=190.0}, points={} } }">
            </property>
        </relation>
        <relation name="relation4" class="ptolemy.actor.TypedIORelation">
            <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;JSONToToken.input&quot;,x=230.0,y=185.0}, tail={id=&quot;KeyValueStore.result&quot;,x=135.0,y=195.0}, points={} } }">
            </property>
        </relation>
        <relation name="relation5" class="ptolemy.actor.TypedIORelation">
            <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;trigger._location&quot;,x=20.0,y=205.0}, tail={id=&quot;KeyValueStore.remove&quot;,x=135.0,y=195.0}, points={} } }">
            </property>
        </relation>
        <relation name="relation6" class="ptolemy.actor.TypedIORelation">
        </relation>
        <link port="x" relation="relation2"/>
        <link port="y" relation="relation3"/>
        <link port="error" relation="relation6"/>
        <link port="trigger" relation="relation5"/>
        <link port="JSONToToken.input" relation="relation4"/>
        <link port="JSONToToken.output" relation="relation"/>
        <link port="ArrayToElements.input" relation="relation"/>
        <link port="ArrayToElements.output" relation="relation2"/>
        <link port="ArrayToElements.output" relation="relation3"/>
        <link port="KeyValueStore.error" relation="relation6"/>
        <link port="KeyValueStore.remove" relation="relation5"/>
        <link port="KeyValueStore.result" relation="relation4"/>
    </entity>
    <entity name="KeyValueStore" class="org.terraswarm.accessor.JSAccessor">
        <property name="script" class="ptolemy.actor.parameters.PortParameter" value="&#10;    // &#10;function fire() {&#10;    var store = get('storeLocation');&#10;    var theKey = get('key');&#10;    var toRemove = get('remove');&#10;    var theValue = get('value');&#10;    var url = store + '/get?id=' + theKey;&#10;    var produce;&#10;    if (toRemove) {&#10;       if (theKey != &quot;&quot;) {&#10;           produce = readURL(url);&#10;           url = store + '/delete?id=' + theKey;&#10;           readURL(url);&#10;           if (produce != &quot;&quot;) {&#10;               send('result', produce);&#10;           }&#10;        }&#10;    } else {&#10;        // toRemove == false. If there is a value, use it to set.&#10;        if (theValue != &quot;&quot;) {&#10;            // FIXME: Escape theValue to make a valid URL.&#10;            url = store + '/set?id=' + encodeURIComponent(theKey) + '&amp;value=' + encodeURIComponent(theValue);&#10;            readURL(url);&#10;            send('result', theValue);&#10;        } else {&#10;            var valueFromStore = decodeURIComponent(readURL(url));&#10;            send('result', valueFromStore);&#10;        }&#10;    }&#10;}&#10;    // &#10;  ">
        </property>
        <property name="accessorSource" class="org.terraswarm.accessor.JSAccessor$ActionableAttribute" value="https://www.terraswarm.org/accessors/net/KeyValueStore.xml">
        </property>
        <property name="documentation" class="ptolemy.vergil.basic.DocAttribute">
            <property name="description" class="ptolemy.kernel.util.StringAttribute" value="&#10;    &#10;This accessor reads or writes data to a key-value store web service.&#10;A URL for the service is specified by the &lt;i&gt;storeLocation&lt;/i&gt; parameter.&#10;A Ptolemy II model that provides such a key-value store service can be found&#10;at &lt;a href=&quot;https://www.terraswarm.org/accessors/demo/KeyValueStore/KeyValueStoreServer.xml&quot;&gt;&#10;https://www.terraswarm.org/accessors/demo/KeyValueStore/KeyValueStoreServer.xml&lt;/a&gt;.&#10;A demo client that uses this accessor is provided at&#10;&lt;a href=&quot;https://www.terraswarm.org/accessors/demo/KeyValueStore/KeyValueStoreClient.xml&quot;&gt;&#10;https://www.terraswarm.org/accessors/demo/KeyValueStore/KeyValueStoreClient.xml&lt;/a&gt;.&#10;&lt;p&gt;&#10;The key and the value are both text items provided as inputs.&#10;If &lt;i&gt;remove&lt;/i&gt; is true and the &lt;i&gt;key&lt;/i&gt; is non-empty, then upon firing, this actor&#10;will remove the specified key from the store, producing on its output the previous&#10;value (if any). If &lt;i&gt;remove&lt;/i&gt; is false, then this actor will either set or&#10;retrieve a value in the key-value store, depending on whether the&#10;and the &lt;i&gt;value&lt;/i&gt; input is non-empty. If the &lt;i&gt;value&lt;/i&gt; is non-empty, then this&#10;actor sets the value. If it is empty, then this actor retrieves the value.&#10;&lt;p&gt;&#10;If an error occurs accessing the key-value store (e.g., no store is found at the specified&#10;URL, or no value is found with the specified key),&#10;then an exception is thrown.&#10;&lt;p&gt;&#10;This accessor assumes that the protocol implemented at that location matches&#10;the specification below for the default location:&#10;&lt;ul&gt;&#10;&lt;li&gt;To store a value with key MY_ID and value MY_VALUE, use&#10;&lt;pre&gt;&#10;   http://localhost:8077/keyvalue/set?id=MY_ID&amp;value=MY_VALUE&#10;&lt;/pre&gt;&#10;&lt;/li&gt;&#10;&lt;li&gt;To retrieve the value, use&#10;&lt;pre&gt;&#10;   http://localhost:8077/keyvalue/get?id=MY_ID&#10;&lt;/pre&gt;&#10;&lt;/li&gt;&#10;&lt;li&gt;To remove a value, use&#10;&lt;pre&gt;&#10;   http://localhost:8077/keyvalue/delete?id=MY_ID&#10;&lt;/pre&gt;&#10;&lt;/li&gt;&#10;&lt;p&gt;&#10;&lt;/ul&gt;&#10;The key and value are both&#10;encoded using the JavaScript encodeURIComponent() function,&#10;and on retrieval, decoded using decodeURIComponent(),&#10;and hence can include any text characters.&#10;    &#10;  ">
            </property>
            <property name="author" class="ptolemy.kernel.util.StringAttribute" value="Edward A. Lee">
            </property>
            <property name="version" class="ptolemy.kernel.util.StringAttribute" value="0.1 $Date$">
            </property>
            <property name="error (port)" class="ptolemy.kernel.util.StringAttribute" value="The error message if an error occurs. If this port is not connected and an error occurs, then an exception is thrown instead.">
            </property>
            <property name="storeLocation (port-parameter)" class="ptolemy.kernel.util.StringAttribute">
            </property>
            <property name="key (port-parameter)" class="ptolemy.kernel.util.StringAttribute" value="Key to be updated or retrieved.">
            </property>
            <property name="remove (port-parameter)" class="ptolemy.kernel.util.StringAttribute" value="If true, then remove the key from the store; otherwise, retrieve the value for the key.">
            </property>
            <property name="value (port-parameter)" class="ptolemy.kernel.util.StringAttribute" value="Value to store in the key-value store, or empty to not store anything.">
            </property>
            <property name="result (port)" class="ptolemy.kernel.util.StringAttribute" value="Value retrieved from or written to the key-value store.">
            </property>
            <property name="key (port)" class="ptolemy.kernel.util.StringAttribute" value="Key to be updated or retrieved.">
            </property>
            <property name="value (port)" class="ptolemy.kernel.util.StringAttribute" value="Value to store in the key-value store, or empty to not store anything.">
            </property>
        </property>
        <property name="storeLocation" class="ptolemy.actor.parameters.PortParameter" value="&quot;http://localhost:8077/keyvalue&quot;">
        </property>
        <property name="key" class="ptolemy.actor.parameters.PortParameter" value="&quot;intruder&quot;">
        </property>
        <property name="remove" class="ptolemy.actor.parameters.PortParameter" value="false">
        </property>
        <property name="value" class="ptolemy.actor.parameters.PortParameter" value="&quot;&quot;">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{205.0, 175.0}">
        </property>
        <port name="error" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_type" class="ptolemy.actor.TypeAttribute" value="string">
            </property>
        </port>
        <port name="storeLocation" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
        <port name="key" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
            <property name="_type" class="ptolemy.actor.TypeAttribute" value="string">
            </property>
        </port>
        <port name="remove" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
        <port name="value" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
            <property name="_type" class="ptolemy.actor.TypeAttribute" value="string">
            </property>
        </port>
        <port name="result" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_type" class="ptolemy.actor.TypeAttribute" value="string">
            </property>
        </port>
    </entity>
    <entity name="JSONToToken" class="ptolemy.actor.lib.conversions.json.JSONToToken">
        <property name="_location" class="ptolemy.kernel.util.Location" value="{330.0, 175.0}">
        </property>
    </entity>
    <entity name="ArrayToElements" class="ptolemy.actor.lib.ArrayToElements">
        <property name="_location" class="ptolemy.kernel.util.Location" value="{430.0, 175.0}">
        </property>
    </entity>
    <entity name="Errors" class="ptolemy.actor.lib.gui.Display">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={927, 22, 499, 208}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[499, 164]">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{340.0, 265.0}">
        </property>
    </entity>
    <entity name="DiscreteClock" class="ptolemy.actor.lib.DiscreteClock">
        <property name="offsets" class="ptolemy.data.expr.Parameter" value="{0.0}">
        </property>
        <property name="values" class="ptolemy.data.expr.Parameter" value="{false}">
        </property>
        <doc>Create periodic timed events.</doc>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{25.0, 185.0}">
        </property>
    </entity>
    <relation name="relation" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;JSONToToken.output&quot;,x=330.0,y=175.0}, tail={id=&quot;ArrayToElements.input&quot;,x=430.0,y=175.0}, points={} } }">
        </property>
    </relation>
    <relation name="relation3" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;KeyValueStore.result&quot;,x=205.0,y=175.0}, tail={id=&quot;JSONToToken.input&quot;,x=330.0,y=175.0}, points={} } }">
        </property>
    </relation>
    <relation name="relation2" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;XYScope.inputX&quot;,x=605.0,y=175.0,index=2}, tail={id=&quot;ArrayToElements.output&quot;,x=430.0,y=175.0,index=2}, points={540.0,160.0,540.0,175.0} } }">
        </property>
    </relation>
    <relation name="relation4" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;XYScope.inputX&quot;,x=605.0,y=175.0,index=2}, tail={id=&quot;MultiInstanceComposite.x&quot;,x=180.0,y=100.0}, points={555.0,165.0,555.0,50.0,295.0,50.0,295.0,95.0} } }">
        </property>
    </relation>
    <relation name="relation5" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;XYScope.inputY&quot;,x=605.0,y=175.0,index=2}, tail={id=&quot;ArrayToElements.output&quot;,x=430.0,y=175.0,index=2}, points={} } }">
        </property>
    </relation>
    <relation name="relation6" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;XYScope.inputY&quot;,x=605.0,y=175.0,index=2}, tail={id=&quot;MultiInstanceComposite.y&quot;,x=180.0,y=100.0}, points={525.0,185.0,525.0,105.0} } }">
        </property>
    </relation>
    <relation name="relation8" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;MultiInstanceComposite.error&quot;,x=180.0,y=100.0}, tail={id=&quot;Errors.input&quot;,x=340.0,y=265.0,index=2}, points={295.0,115.0,295.0,260.0} } }">
        </property>
    </relation>
    <relation name="relation7" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;KeyValueStore.error&quot;,x=205.0,y=175.0}, tail={id=&quot;Errors.input&quot;,x=340.0,y=265.0,index=2}, points={205.0,265.0} } }">
        </property>
    </relation>
    <relation name="relation10" class="ptolemy.actor.TypedIORelation">
        <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
        </property>
        <vertex name="vertex1" value="{105.0, 185.0}">
        </vertex>
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;MultiInstanceComposite.trigger&quot;,x=180.0,y=100.0}, tail={id=&quot;relation10.vertex1&quot;,x=105.0,y=185.0}, points={105.0,105.0} },{ head={id=&quot;DiscreteClock.output&quot;,x=25.0,y=185.0}, tail={id=&quot;relation10.vertex1&quot;,x=105.0,y=185.0}, points={} },{ head={id=&quot;KeyValueStore.remove&quot;,x=205.0,y=175.0}, tail={id=&quot;relation10.vertex1&quot;,x=105.0,y=185.0}, points={} } }">
        </property>
    </relation>
    <link port="XYScope.inputX" relation="relation2"/>
    <link port="XYScope.inputX" relation="relation4"/>
    <link port="XYScope.inputY" relation="relation5"/>
    <link port="XYScope.inputY" relation="relation6"/>
    <link port="MultiInstanceComposite.x" relation="relation4"/>
    <link port="MultiInstanceComposite.y" relation="relation6"/>
    <link port="MultiInstanceComposite.error" relation="relation8"/>
    <link port="MultiInstanceComposite.trigger" relation="relation10"/>
    <link port="KeyValueStore.error" relation="relation7"/>
    <link port="KeyValueStore.remove" relation="relation10"/>
    <link port="KeyValueStore.result" relation="relation3"/>
    <link port="JSONToToken.input" relation="relation3"/>
    <link port="JSONToToken.output" relation="relation"/>
    <link port="ArrayToElements.input" relation="relation"/>
    <link port="ArrayToElements.output" relation="relation2"/>
    <link port="ArrayToElements.output" relation="relation5"/>
    <link port="Errors.input" relation="relation8"/>
    <link port="Errors.input" relation="relation7"/>
    <link port="DiscreteClock.output" relation="relation10"/>
</entity>
