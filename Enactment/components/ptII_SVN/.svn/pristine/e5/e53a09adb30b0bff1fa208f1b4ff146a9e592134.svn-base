<?xml version="1.0" standalone="no"?>
<!DOCTYPE entity PUBLIC "-//UC Berkeley//DTD MoML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/MoML_1.dtd">
<entity name="RandomWalkIntruder" class="ptolemy.actor.TypedCompositeActor">
    <property name="_createdBy" class="ptolemy.kernel.attributes.VersionAttribute" value="11.0.devel">
    </property>
    <property name="DE Director" class="ptolemy.domains.de.kernel.DEDirector">
        <property name="stopTime" class="ptolemy.data.expr.Parameter" value="">
        </property>
        <property name="stopWhenQueueIsEmpty" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <property name="synchronizeToRealTime" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <property name="enforceMicrostepSemantics" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{145.0, 155.0}">
        </property>
    </property>
    <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={170, 22, 813, 670}, maximized=false}">
    </property>
    <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[579, 560]">
    </property>
    <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0177468488862804">
    </property>
    <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{371.5390625, 294.2047177065026}">
    </property>
    <property name="enableBackwardTypeInference" class="ptolemy.data.expr.Parameter" value="true">
    </property>
    <property name="_defaultWidthInferredTo1" class="ptolemy.data.expr.Parameter" value="true">
    </property>
    <property name="_defaultInferredWidthTo1" class="ptolemy.data.expr.Parameter" value="true">
    </property>
    <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="textSize" class="ptolemy.data.expr.Parameter" value="18">
        </property>
        <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0,0.0,0.0,1.0}">
        </property>
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Model of an intruder that moves at constant speed and&#10;randomly changes direction at each discrete time step.&#10;This model publishes the robot location to a key-value&#10;store at the specified location.">
        </property>
        <property name="_location" class="ptolemy.vergil.basic.RelativeLocation" value="{90.0, 20.0}">
        </property>
    </property>
    <property name="storeLocation" class="ptolemy.data.expr.Parameter" value="&quot;http://localhost:8077/keyvalue&quot;">
        <property name="_hideName" class="ptolemy.kernel.util.SingletonAttribute">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.ValueIcon">
            <property name="_color" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 1.0, 1.0}">
            </property>
        </property>
        <property name="_smallIconDescription" class="ptolemy.kernel.util.SingletonConfigurableAttribute">
            <configure>
      <svg>
        <text x="20" style="font-size:14; font-family:SansSerif; fill:blue" y="20">-P-</text>
      </svg>
    </configure>
        </property>
        <property name="_editorFactory" class="ptolemy.vergil.toolbox.VisibleParameterEditorFactory">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{240.0, 130.0}">
        </property>
    </property>
    <property name="speed" class="ptolemy.data.expr.Parameter" value="5.0">
        <property name="_hideName" class="ptolemy.kernel.util.SingletonAttribute">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.ValueIcon">
            <property name="_color" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 1.0, 1.0}">
            </property>
        </property>
        <property name="_smallIconDescription" class="ptolemy.kernel.util.SingletonConfigurableAttribute">
            <configure>
      <svg>
        <text x="20" style="font-size:14; font-family:SansSerif; fill:blue" y="20">-P-</text>
      </svg>
    </configure>
        </property>
        <property name="_editorFactory" class="ptolemy.vergil.toolbox.VisibleParameterEditorFactory">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{240.0, 150.0}">
        </property>
    </property>
    <property name="timeStep" class="ptolemy.data.expr.Parameter" value="1.0">
        <property name="_hideName" class="ptolemy.kernel.util.SingletonAttribute">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.ValueIcon">
            <property name="_color" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 1.0, 1.0}">
            </property>
        </property>
        <property name="_smallIconDescription" class="ptolemy.kernel.util.SingletonConfigurableAttribute">
            <configure>
      <svg>
        <text x="20" style="font-size:14; font-family:SansSerif; fill:blue" y="20">-P-</text>
      </svg>
    </configure>
        </property>
        <property name="_editorFactory" class="ptolemy.vergil.toolbox.VisibleParameterEditorFactory">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{240.0, 170.0}">
        </property>
    </property>
    <property name="_layoutConfiguration" class="ptolemy.vergil.basic.layout.ActorLayoutConfiguration">
        <property name="includeDecorations" class="ptolemy.data.expr.Parameter" value="false">
            <display name="Include decorations"/>
        </property>
    </property>
    <entity name="Intruder" class="ptolemy.actor.TypedCompositeActor">
        <property name="_location" class="ptolemy.kernel.util.Location" value="{125.0, 240.0}">
        </property>
        <property name="initialPosition" class="ptolemy.data.expr.Parameter" value="{0.0,0.0}">
            <property name="_hideName" class="ptolemy.kernel.util.SingletonAttribute">
            </property>
            <property name="_icon" class="ptolemy.vergil.icon.ValueIcon">
                <property name="_color" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 1.0, 1.0}">
                </property>
            </property>
            <property name="_smallIconDescription" class="ptolemy.kernel.util.SingletonConfigurableAttribute">
                <configure>
      <svg>
        <text x="20" style="font-size:14; font-family:SansSerif; fill:blue" y="20">-P-</text>
      </svg>
    </configure>
            </property>
            <property name="_editorFactory" class="ptolemy.vergil.toolbox.VisibleParameterEditorFactory">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[-210.0, -210.0]">
            </property>
        </property>
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={121, 179, 934, 634}, maximized=false}">
        </property>
        <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[700, 524]">
        </property>
        <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="0.8">
        </property>
        <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{176.0314680232558, 12.340270712209303}">
        </property>
        <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
            <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Add random motion of magnitude &lt;speed&gt; &#10;to the intruder position at every time step">
            </property>
            <property name="_location" class="ptolemy.vergil.basic.RelativeLocation" value="[-35.0, -95.0]">
                <property name="relativeTo" class="ptolemy.kernel.util.StringAttribute" value="Controller">
                </property>
                <property name="relativeToElementName" class="ptolemy.kernel.util.StringAttribute" value="entity">
                </property>
            </property>
        </property>
        <property name="timeStep" class="ptolemy.data.expr.Parameter" value="timeStep">
            <property name="_hideName" class="ptolemy.kernel.util.SingletonAttribute">
            </property>
            <property name="_icon" class="ptolemy.vergil.icon.ValueIcon">
                <property name="_color" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 1.0, 1.0}">
                </property>
            </property>
            <property name="_smallIconDescription" class="ptolemy.kernel.util.SingletonConfigurableAttribute">
                <configure>
      <svg>
        <text x="20" style="font-size:14; font-family:SansSerif; fill:blue" y="20">-P-</text>
      </svg>
    </configure>
            </property>
            <property name="_editorFactory" class="ptolemy.vergil.toolbox.VisibleParameterEditorFactory">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[-210.0, -190.0]">
            </property>
        </property>
        <port name="robotPosition" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{-215.0, 50.0}">
            </property>
        </port>
        <entity name="Controller" class="ptolemy.actor.TypedCompositeActor">
            <property name="_location" class="ptolemy.kernel.util.Location" value="{-185.0, -80.0}">
            </property>
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={83, 22, 934, 634}, maximized=false}">
            </property>
            <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[700, 524]">
            </property>
            <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="0.8104592556566743">
            </property>
            <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{424.6845703124998, -24.29427932518115}">
            </property>
            <port name="controlOutput" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[630.0, 90.0]">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="port" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[85.0, 80.0]">
                </property>
            </port>
            <entity name="Uniform" class="ptolemy.actor.lib.Uniform">
                <property name="upperBound" class="ptolemy.actor.parameters.PortParameter" value="2*pi">
                </property>
                <doc>Create a sequence of uniformly distributed random numbers</doc>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[240.0, 90.0]">
                </property>
            </entity>
            <entity name="Expression" class="ptolemy.actor.lib.Expression">
                <property name="expression" class="ptolemy.kernel.util.StringAttribute" value="{cos(theta),sin(theta)}*speed">
                </property>
                <property name="_icon" class="ptolemy.vergil.icon.BoxedValueIcon">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="expression">
                    </property>
                    <property name="displayWidth" class="ptolemy.data.expr.Parameter" value="60">
                    </property>
                    <property name="displayHeight" class="ptolemy.data.expr.Parameter" value="10">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[390.0, 90.0]">
                </property>
                <port name="theta" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
            </entity>
            <relation name="relation2" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation3" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation" class="ptolemy.actor.TypedIORelation">
            </relation>
            <link port="controlOutput" relation="relation3"/>
            <link port="port" relation="relation"/>
            <link port="Uniform.output" relation="relation2"/>
            <link port="Uniform.trigger" relation="relation"/>
            <link port="Expression.output" relation="relation3"/>
            <link port="Expression.theta" relation="relation2"/>
        </entity>
        <entity name="SingleEvent" class="ptolemy.actor.lib.SingleEvent">
            <property name="value" class="ptolemy.data.expr.Parameter" value="initialPosition">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{65.0, -80.0}">
            </property>
        </entity>
        <entity name="Merge" class="ptolemy.domains.continuous.lib.ContinuousMerge">
            <property name="_location" class="ptolemy.kernel.util.Location" value="{150.0, -10.0}">
            </property>
        </entity>
        <entity name="AddSubtract" class="ptolemy.actor.lib.AddSubtract">
            <property name="_location" class="ptolemy.kernel.util.Location" value="{-40.0, -10.0}">
            </property>
        </entity>
        <entity name="TimeDelay" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="timeStep">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{65.0, -10.0}">
            </property>
        </entity>
        <relation name="relation5" class="ptolemy.actor.TypedIORelation">
            <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;SingleEvent.output&quot;,x=65.0,y=-80.0}, tail={id=&quot;Merge.input&quot;,x=150.0,y=-10.0,index=2}, points={115.0,-80.0,115.0,-15.0} } }">
            </property>
        </relation>
        <relation name="relation7" class="ptolemy.actor.TypedIORelation">
            <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
            </property>
            <vertex name="vertex1" value="{-235.0, -20.0}">
            </vertex>
            <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;AddSubtract.plus&quot;,x=-40.0,y=-10.0,index=2}, tail={id=&quot;relation7.vertex1&quot;,x=-235.0,y=-20.0}, points={} },{ head={id=&quot;Controller.port&quot;,x=-185.0,y=-80.0}, tail={id=&quot;relation7.vertex1&quot;,x=-235.0,y=-20.0}, points={-235.0,-80.0} },{ head={id=&quot;robotPosition._location&quot;,x=-215.0,y=50.0}, tail={id=&quot;relation7.vertex1&quot;,x=-235.0,y=-20.0}, points={-235.0,50.0} },{ head={id=&quot;Merge.output&quot;,x=150.0,y=-10.0}, tail={id=&quot;relation7.vertex1&quot;,x=-235.0,y=-20.0}, points={190.0,-10.0,190.0,-130.0,-235.0,-130.0} } }">
            </property>
        </relation>
        <relation name="relation6" class="ptolemy.actor.TypedIORelation">
            <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;Merge.input&quot;,x=150.0,y=-10.0,index=2}, tail={id=&quot;TimeDelay.output&quot;,x=65.0,y=-10.0}, points={} } }">
            </property>
        </relation>
        <relation name="relation2" class="ptolemy.actor.TypedIORelation">
            <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;AddSubtract.output&quot;,x=-40.0,y=-10.0}, tail={id=&quot;TimeDelay.input&quot;,x=65.0,y=-10.0}, points={} } }">
            </property>
        </relation>
        <relation name="relation" class="ptolemy.actor.TypedIORelation">
            <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;AddSubtract.plus&quot;,x=-40.0,y=-10.0,index=2}, tail={id=&quot;Controller.controlOutput&quot;,x=-185.0,y=-80.0}, points={-85.0,-25.0,-85.0,-80.0} } }">
            </property>
        </relation>
        <link port="robotPosition" relation="relation7"/>
        <link port="Controller.controlOutput" relation="relation"/>
        <link port="Controller.port" relation="relation7"/>
        <link port="SingleEvent.output" relation="relation5"/>
        <link port="Merge.input" relation="relation5"/>
        <link port="Merge.input" relation="relation6"/>
        <link port="Merge.output" relation="relation7"/>
        <link port="AddSubtract.plus" relation="relation"/>
        <link port="AddSubtract.plus" relation="relation7"/>
        <link port="AddSubtract.output" relation="relation2"/>
        <link port="TimeDelay.input" relation="relation2"/>
        <link port="TimeDelay.output" relation="relation6"/>
    </entity>
    <entity name="TokenToJSON" class="ptolemy.actor.lib.conversions.json.TokenToJSON">
        <property name="_location" class="ptolemy.kernel.util.Location" value="{200.0, 240.0}">
        </property>
    </entity>
    <entity name="KeyValueStore2" class="org.terraswarm.accessor.JSAccessor">
        <property name="script" class="ptolemy.actor.parameters.PortParameter" value="&#10;    // &#10;function fire() {&#10;    var store = get('storeLocation');&#10;    var theKey = get('key');&#10;    var toRemove = get('remove');&#10;    var theValue = get('value');&#10;    var url = store + '/get?id=' + theKey;&#10;    var produce;&#10;    if (toRemove) {&#10;       if (theKey != &quot;&quot;) {&#10;           produce = readURL(url);&#10;           url = store + '/delete?id=' + theKey;&#10;           readURL(url);&#10;           if (produce != &quot;&quot;) {&#10;               send('result', produce);&#10;           }&#10;        }&#10;    } else {&#10;        // toRemove == false. If there is a value, use it to set.&#10;        if (theValue != &quot;&quot;) {&#10;            // FIXME: Escape theValue to make a valid URL.&#10;            url = store + '/set?id=' + encodeURIComponent(theKey) + '&amp;value=' + encodeURIComponent(theValue);&#10;            readURL(url);&#10;            send('result', theValue);&#10;        } else {&#10;            var valueFromStore = decodeURIComponent(readURL(url));&#10;            send('result', valueFromStore);&#10;        }&#10;    }&#10;}&#10;    // &#10;  ">
        </property>
        <property name="accessorSource" class="org.terraswarm.accessor.JSAccessor$ActionableAttribute" value="https://www.terraswarm.org/accessors/net/KeyValueStore.xml">
        </property>
        <property name="documentation" class="ptolemy.vergil.basic.DocAttribute">
            <property name="description" class="ptolemy.kernel.util.StringAttribute" value="&#10;    &#10;This accessor reads or writes data to a key-value store web service.&#10;A URL for the service is specified by the &lt;i&gt;storeLocation&lt;/i&gt; parameter.&#10;A Ptolemy II model that provides such a key-value store service can be found&#10;at &lt;a href=&quot;https://www.terraswarm.org/accessors/demo/KeyValueStore/KeyValueStoreServer.xml&quot;&gt;&#10;https://www.terraswarm.org/accessors/demo/KeyValueStore/KeyValueStoreServer.xml&lt;/a&gt;.&#10;A demo client that uses this accessor is provided at&#10;&lt;a href=&quot;https://www.terraswarm.org/accessors/demo/KeyValueStore/KeyValueStoreClient.xml&quot;&gt;&#10;https://www.terraswarm.org/accessors/demo/KeyValueStore/KeyValueStoreClient.xml&lt;/a&gt;.&#10;&lt;p&gt;&#10;The key and the value are both text items provided as inputs.&#10;If &lt;i&gt;remove&lt;/i&gt; is true and the &lt;i&gt;key&lt;/i&gt; is non-empty, then upon firing, this actor&#10;will remove the specified key from the store, producing on its output the previous&#10;value (if any). If &lt;i&gt;remove&lt;/i&gt; is false, then this actor will either set or&#10;retrieve a value in the key-value store, depending on whether the&#10;and the &lt;i&gt;value&lt;/i&gt; input is non-empty. If the &lt;i&gt;value&lt;/i&gt; is non-empty, then this&#10;actor sets the value. If it is empty, then this actor retrieves the value.&#10;&lt;p&gt;&#10;If an error occurs accessing the key-value store (e.g., no store is found at the specified&#10;URL, or no value is found with the specified key),&#10;then an exception is thrown.&#10;&lt;p&gt;&#10;This accessor assumes that the protocol implemented at that location matches&#10;the specification below for the default location:&#10;&lt;ul&gt;&#10;&lt;li&gt;To store a value with key MY_ID and value MY_VALUE, use&#10;&lt;pre&gt;&#10;   http://localhost:8077/keyvalue/set?id=MY_ID&amp;value=MY_VALUE&#10;&lt;/pre&gt;&#10;&lt;/li&gt;&#10;&lt;li&gt;To retrieve the value, use&#10;&lt;pre&gt;&#10;   http://localhost:8077/keyvalue/get?id=MY_ID&#10;&lt;/pre&gt;&#10;&lt;/li&gt;&#10;&lt;li&gt;To remove a value, use&#10;&lt;pre&gt;&#10;   http://localhost:8077/keyvalue/delete?id=MY_ID&#10;&lt;/pre&gt;&#10;&lt;/li&gt;&#10;&lt;p&gt;&#10;&lt;/ul&gt;&#10;The key and value are both&#10;encoded using the JavaScript encodeURIComponent() function,&#10;and on retrieval, decoded using decodeURIComponent(),&#10;and hence can include any text characters.&#10;    &#10;  ">
            </property>
            <property name="author" class="ptolemy.kernel.util.StringAttribute" value="Edward A. Lee">
            </property>
            <property name="version" class="ptolemy.kernel.util.StringAttribute" value="0.1 $Date: 2016-01-09 08:45:51 -0800 (Sat, 09 Jan 2016) $">
            </property>
            <property name="error (port)" class="ptolemy.kernel.util.StringAttribute" value="The error message if an error occurs. If this port is not connected and an error occurs, then an exception is thrown instead.">
            </property>
            <property name="storeLocation (port-parameter)" class="ptolemy.kernel.util.StringAttribute">
            </property>
            <property name="key (port-parameter)" class="ptolemy.kernel.util.StringAttribute" value="Key to be updated or retrieved.">
            </property>
            <property name="remove (port-parameter)" class="ptolemy.kernel.util.StringAttribute" value="If true, then remove the key from the store; otherwise, retrieve the value for the key.">
            </property>
            <property name="value (port-parameter)" class="ptolemy.kernel.util.StringAttribute" value="Value to store in the key-value store, or empty to not store anything.">
            </property>
            <property name="result (port)" class="ptolemy.kernel.util.StringAttribute" value="Value retrieved from or written to the key-value store.">
            </property>
            <property name="key (port)" class="ptolemy.kernel.util.StringAttribute" value="Key to be updated or retrieved.">
            </property>
            <property name="value (port)" class="ptolemy.kernel.util.StringAttribute" value="Value to store in the key-value store, or empty to not store anything.">
            </property>
        </property>
        <property name="storeLocation" class="ptolemy.actor.parameters.PortParameter" value="&quot;http://localhost:8077/keyvalue&quot;">
        </property>
        <property name="key" class="ptolemy.actor.parameters.PortParameter" value="&quot;intruder&quot;">
        </property>
        <property name="remove" class="ptolemy.actor.parameters.PortParameter" value="false">
        </property>
        <property name="value" class="ptolemy.actor.parameters.PortParameter" value="&quot;[0.18856744366240275,53.22449975056432]&quot;">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{355.0, 220.0}">
        </property>
        <port name="error" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_type" class="ptolemy.actor.TypeAttribute" value="string">
            </property>
        </port>
        <port name="storeLocation" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
        <port name="key" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
            <property name="_type" class="ptolemy.actor.TypeAttribute" value="string">
            </property>
        </port>
        <port name="remove" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
        <port name="value" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
            <property name="_type" class="ptolemy.actor.TypeAttribute" value="string">
            </property>
        </port>
        <port name="result" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_type" class="ptolemy.actor.TypeAttribute" value="string">
            </property>
        </port>
    </entity>
    <entity name="Errors" class="ptolemy.actor.lib.gui.Display">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={933, 234, 499, 208}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{465.0, 300.0}">
        </property>
    </entity>
    <relation name="relation2" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;TokenToJSON.output&quot;,x=200.0,y=240.0}, tail={id=&quot;KeyValueStore2.value&quot;,x=355.0,y=220.0}, points={} } }">
        </property>
    </relation>
    <relation name="relation3" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;KeyValueStore2.error&quot;,x=355.0,y=220.0}, tail={id=&quot;Errors.input&quot;,x=465.0,y=300.0}, points={355.0,300.0} } }">
        </property>
    </relation>
    <relation name="relation" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;Intruder.robotPosition&quot;,x=125.0,y=240.0}, tail={id=&quot;TokenToJSON.input&quot;,x=200.0,y=240.0}, points={} } }">
        </property>
    </relation>
    <link port="Intruder.robotPosition" relation="relation"/>
    <link port="TokenToJSON.input" relation="relation"/>
    <link port="TokenToJSON.output" relation="relation2"/>
    <link port="KeyValueStore2.error" relation="relation3"/>
    <link port="KeyValueStore2.value" relation="relation2"/>
    <link port="Errors.input" relation="relation3"/>
</entity>
