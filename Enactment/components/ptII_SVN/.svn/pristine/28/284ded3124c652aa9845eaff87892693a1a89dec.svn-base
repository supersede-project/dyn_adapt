<?xml version="1.0" standalone="no"?>
<!DOCTYPE entity PUBLIC "-//UC Berkeley//DTD MoML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/MoML_1.dtd">
<entity name="GDPSubscribe" class="ptolemy.actor.TypedCompositeActor">
    <property name="_createdBy" class="ptolemy.kernel.attributes.VersionAttribute" value="11.0.devel">
    </property>
    <property name="DE Director" class="ptolemy.domains.de.kernel.DEDirector">
        <property name="stopWhenQueueIsEmpty" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="synchronizeToRealTime" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="68.0, 32.0">
        </property>
    </property>
    <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={420, 238, 934, 634}, maximized=false}">
    </property>
    <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[700, 524]">
    </property>
    <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0">
    </property>
    <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{355.0, 256.181640625}">
    </property>
    <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Subscribe to the GDP log that the WatchHandRaisingLightGDP demo&#10;publishing to and display the contents.">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[140.0, 20.0]">
        </property>
    </property>
    <entity name="TimedDisplay" class="ptolemy.actor.lib.gui.TimedDisplay">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={300, 624, 499, 208}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[499, 164]">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[400.0, 180.0]">
        </property>
    </entity>
    <entity name="GDPLogSubscribe2" class="org.terraswarm.accessor.JSAccessor">
        <property name="script" class="ptolemy.actor.parameters.PortParameter" value="/* Subscribe to a log. */&#10;&#10;// Copyright (c) 2015-2016 The Regents of the University of California.&#10;// All rights reserved.&#10;&#10;// Permission is hereby granted, without written agreement and without&#10;// license or royalty fees, to use, copy, modify, and distribute this&#10;// software and its documentation for any purpose, provided that the above&#10;// copyright notice and the following two paragraphs appear in all copies&#10;// of this software.&#10;&#10;// IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY&#10;// FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES&#10;// ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF&#10;// THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF&#10;// SUCH DAMAGE.&#10;&#10;// THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,&#10;// INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF&#10;// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE&#10;// PROVIDED HEREUNDER IS ON AN &quot;AS IS&quot; BASIS, AND THE UNIVERSITY OF&#10;// CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,&#10;// ENHANCEMENTS, OR MODIFICATIONS.&#10;&#10;/** Subscribe to a Global Data Plane (GDP) log.&#10; *&#10; *  FIXME: What is the meaning of the startrec and numrec arguments? Makes no sense for subscription.&#10; *&#10; *  @output {string} data The data that is read from the log.&#10; *&#10; *  @input {string} logname The GDP logname.  By convention, a log name should be &#10; *   a reverse fully qualified name like &quot;org.terraswarm.accessor.demo.MyDemoName&quot;.&#10; *   If this input is an empty string, then no subscription will&#10; *   occur until a non-empty value is provided.&#10; *   By default, this is empty.&#10; *   Providing an empty string will unsubscribe from any previously subscribed-to log.&#10; *&#10; *  @input {string} logdname The name of a logd server.  If empty,&#10; *   then the hostname of the local machine is used. This server is&#10; *   a gateway into the GDP.&#10; *   FIXME: Shouldn't this be a parameter rather than input?&#10; *&#10; *  @input {int} numrec The number of records to read.&#10; *&#10; *  @input {int} startrec The record number to be read.  In the GDP,&#10; *  the first record is record 1.&#10; *&#10; *  @input {int} timeout The timeout in milliseconds.&#10; *&#10; *  @parameter {string} debugLevel The value of the GDP debug flag.&#10; *  See gdp/README-developers.md for a complete summary.  The value is&#10; *  typically &quot;pattern=level&quot;, for example &quot;gdplogd.physlog=39&quot;.  To&#10; *  see the patterns, use the &quot;what&quot; command or strings&#10; *  $PTII/lib/libgdp* | grep '@(#)'.  Use &quot;*=40&quot; to set the debug&#10; *  level to 40 for all components. The value of level is not usually&#10; *  over 127.  Values over 100 may modify the behavior.&#10; *&#10; *  @accessor gdp/GDPLogSubscribe&#10; *  @author Christopher Brooks, Edward A. Lee, Nitesh Mor&#10; *  @version $$Id$$ &#10; */&#10;&#10;// Stop extra messages from jslint.  Note that there should be no&#10;// space between the / and the * and global.&#10;/*globals addInputHandler, exports, getParameter, input, output, parameter, removeInputHandler, require, send */&#10;/*jshint globalstrict: true */&#10;&quot;use strict&quot;;&#10;&#10;var GDP = require('gdp');&#10;var log = null;&#10;var handle = null;&#10;var oldLogname = null;&#10;&#10;// If getNextData() returns null data, then set sawNull to true.&#10;var sawNull = false;&#10;&#10;/** Setup the parameters and ports. */&#10;exports.setup = function() {&#10;    this.output('data', {'type': 'string'});&#10;    this.parameter('debugLevel', {'type': 'string'});&#10;    this.input('logname', {'type': 'string', 'value': ''});&#10;    this.input('logdname', {'type': 'string', 'value': 'edu.berkeley.eecs.gdp-01.gdplogd'});&#10;    this.parameter('numrec', {'type': 'int', 'value':0});&#10;    this.parameter('startrec', {'type': 'int', 'value': 0});&#10;    this.parameter('timeout', {'type': 'int', 'value':0});&#10;};&#10;&#10;/** Add an input handler that will subscribe to a log. */&#10;exports.initialize = function() {&#10;    var self = this;&#10;&#10;    // Set an input handler to unsubscribe and then invoke this initialize()&#10;    // function when a new logname is provided.&#10;    this.addInputHandler('logname', function() {&#10;        // FIXME: WHy doesn't the following work??????????&#10;        // exports.wrapup();&#10;        // exports.initialize();&#10;    });&#10;&#10;    var logname = this.get('logname');&#10;    if (logname === '') {&#10;        // Nothing more to do.&#10;        return;&#10;    }    &#10;&#10;    var logdname = this.get('logdname');&#10;	    &#10;	// Create or connect to a log.&#10;	// The second argument specifies to open the log &quot;read only.&quot;&#10;	log = new GDP.GDP(logname, 1, logdname);&#10;	    &#10;	// Listen for data from the log.&#10;	log.on('data', function(data) {&#10;	    console.log('****** received: ' + data);&#10;	    self.send('data', data); &#10;	    console.log('****** sent data: ' + data);&#10;	});&#10;	    &#10;	log.setDebugLevel(this.getParameter('debugLevel'));&#10;	    &#10;	// Subscribe to the log so that 'data' events are emitted.&#10;	log.subscribe(&#10;	        this.getParameter('startrec'),&#10;	        this.getParameter('numrec'),&#10;	        this.getParameter('timeout'));&#10;};&#10;&#10;/** Unsubscribe to the log. */&#10;exports.wrapup = function() {&#10;    if (log) {&#10;        log.unsubscribe();&#10;    }&#10;};&#10;">
            <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                </property>
            </property>
        </property>
        <property name="accessorSource" class="org.terraswarm.accessor.JSAccessor$ActionableAttribute" value="https://www.terraswarm.org/accessors/gdp/GDPLogSubscribe.js">
        </property>
        <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
            <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
            </property>
            <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
            </property>
        </property>
        <property name="debugLevel" class="ptolemy.data.expr.Parameter" value="">
            <property name="_stringMode" class="ptolemy.kernel.util.SingletonAttribute">
            </property>
        </property>
        <property name="logname" class="ptolemy.actor.parameters.PortParameter" value="org.terraswarm.accessors.demo.WatchHandRaisingLightGDP">
            <property name="_stringMode" class="ptolemy.kernel.util.SingletonAttribute">
            </property>
        </property>
        <property name="logdname" class="ptolemy.actor.parameters.PortParameter" value="edu.berkeley.eecs.gdp-01.gdplogd">
            <property name="_stringMode" class="ptolemy.kernel.util.SingletonAttribute">
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[220.0, 180.0]">
        </property>
        <port name="logname" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
        <port name="logdname" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
        <port name="data" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
        </port>
    </entity>
    <relation name="relation" class="ptolemy.actor.TypedIORelation">
    </relation>
    <link port="TimedDisplay.input" relation="relation"/>
    <link port="GDPLogSubscribe2.data" relation="relation"/>
</entity>
