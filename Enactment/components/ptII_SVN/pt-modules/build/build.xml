<project name="pt-modules" default="build-all">
  <!-- $Id: build.xml 66577 2013-06-04 23:36:46Z hallvard $
       This file is used by ant to build modules that include a subset of Ptolemy II.
    -->

  <!-- Ant properties. Alphabetize, please. -->
  <property name="jar-name" value="jar"/>

  <property name="javachdir" value="../../ptolemy/util/test/junit/javachdir"/>

  <!-- junit.formatter defaults to plain and is used by checkstyle and test.  Other values: brief, failure, plain, xml -->
  <property name="junit.formatter" value="plain" />

  <property name="projectsPath" value="../projects"/>
  <property name="ptPath" value="../.."/>
  <property name="pt-projects" value=""/>
  <property name="pt-projects-classpath" value=""/>

  <!-- The timeout in seconds for findbugs and junit. -->
  <property name="timeout" value="2400000" />

  <!-- Ant paths. Alphabetize, please. -->
  <path id="junit.classpath">
    <pathelement location="${ptPath}/lib/junit-4.8.2.jar"/>
    <pathelement location="${ptPath}/lib/JUnitParams-0.3.0.jar"/>
    <pathelement location="${ptPath}/lib/ptjacl.jar"/>
  </path>

  <!-- Ant targets. Alphabetize, please. Run "ant -p" to see the descriptions. -->
  <target name="clean"
	  description="Delete the jars/ directory.">
    <delete dir="jars"/>
  </target>

  <target name="build-all"
	  depends="init"
	  description="Clean, then build all the jar files.">
    <!-- Cannot be alphabetized, since order matches dependencies. -->
    <antcall target="ptolemy-core.jar"/>
    <antcall target="ptolemy-de.jar"/>
    <antcall target="ptolemy-ddf.jar"/>
    <antcall target="ptolemy-lib.jar"/>
    <antcall target="ptolemy-kore-test.jar"/>
    <antcall target="ptolemy-moml.jar"/>
    <antcall target="ptolemy-sdf.jar"/>
    <antcall target="ptolemy-sr.jar"/>
    <antcall target="ptolemy-modal.jar"/>
    <antcall target="ptolemy-ptera.jar"/>
    <antcall target="ptolemy-test.jar"/>
  </target>

  <target name="jar-uptodate"
	  depends="init"
	  description="Build an individual jar file.">
    <uptodate property="${jar-name}.uptodate" targetfile="jars/${jar-name}.jar">
  		<srcresources>
			<ptprojectfileset ptPath="${ptPath}" projectPathsPrefix="${projectsPath}"
				projectNames="${pt-projects}" echo="false" includeFileSetFile="true"/>
  		</srcresources>
  	</uptodate>
  </target>

  <target name="build-jar" unless="${jar-name}.uptodate"
	  depends="init,jar-uptodate"
	  description="Build an individual jar file.">
    <delete dir="${jar-name}"/>
    <copy todir="${jar-name}/src">
	<ptprojectfileset ptPath="${ptPath}" projectPathsPrefix="${projectsPath}"
		projectNames="${pt-projects}" echo="false"/>
    </copy>
    <javac srcdir="${jar-name}/src" classpath="${pt-projects-classpath}" includeantruntime="false"/>
    <jar destfile="jars/${jar-name}.jar" basedir="${jar-name}/src"
	 excludes="**/*.java"
	 />
    <delete dir="${jar-name}"/>
  </target>

  <target name="init"
	  description="Build a Java class used by ant to handle linked projects.">
    <javac srcdir="pt-antext/src" destdir="pt-antext/bin" includeantruntime="true"/>
	<typedef
    	name="ptprojectfileset"
    	classname="org.ptolemy.antext.PtProjectFileSet"
    	classpath="pt-antext/bin"/>
    <mkdir dir="jars"/>
  </target>
  
  <target name="ptolemy-core.jar"
	  description="A jar file containing the pt-kore and pt-akore projects.">
    <antcall target="build-jar">
      <param name="pt-projects" value="pt-kore;pt-akore"/>
      <param name="jar-name" value="ptolemy-core"/>
    </antcall>
  </target>

  <target name="ptolemy-de.jar"
	  description="A jar file containing the pt-de project.">
    <antcall target="build-jar">
      <param name="pt-projects" value="pt-de"/>
      <param name="jar-name" value="ptolemy-de"/>
      <param name="pt-projects-classpath" value="jars/ptolemy-core.jar"/>
    </antcall>
  </target>

  <target name="ptolemy-ddf.jar"
	  description="A jar file containing the pt-ddf project.">
    <antcall target="build-jar">
      <param name="pt-projects" value="pt-ddf"/>
      <param name="jar-name" value="ptolemy-ddf"/>
      <param name="pt-projects-classpath" value="jars/ptolemy-core.jar"/>
    </antcall>
  </target>

  <!-- FIXME: The ptolemy-kore-test.jar file could be renamed and called
       ptolemy-core-test.jar.  The JUnit and test class files for all
       the packages in ptolemy-core.jar would need to be added. -->
  <target name="ptolemy-kore-test.jar"
	  depends="ptolemy-test.jar"
	  description="A jar file containing the test classes for the pt-kore.">
    <antcall target="build-jar">
      <param name="pt-projects" value="pt-kore-test"/>
      <param name="pt-projects-classpath" value="jars/ptolemy-core.jar;jars/ptolemy-test.jar;${ptPath}/lib/junit-4.8.2.jar;${ptPath}/lib/JUnitParams-0.3.0.jar;${ptPath}/lib/ptjacl.jar"/>
      <param name="jar-name" value="ptolemy-kore-test"/>
    </antcall>
  </target>

  <target name="ptolemy-lib.jar"
	  description="A jar file containing the pt-lib project.">
    <antcall target="build-jar">
      <param name="pt-projects" value="pt-junit;pt-lib"/>
      <param name="jar-name" value="ptolemy-lib"/>
      <param name="pt-projects-classpath" value="jars/ptolemy-core.jar;jars/ptolemy-sdf.jar"/>
    </antcall>
  </target>

  <target name="ptolemy-modal.jar"
	  description="A jar file containing the pt-modal project.">
    <antcall target="build-jar">
      <param name="pt-projects" value="pt-modal"/>
      <param name="jar-name" value="ptolemy-modal"/>
      <param name="pt-projects-classpath" value="jars/ptolemy-core.jar;jars/ptolemy-sdf.jar;jars/ptolemy-lib.jar;jars/ptolemy-moml.jar"/>
    </antcall>
  </target>

  <target name="ptolemy-moml.jar"
	  description="A jar file containing the pt-moml and pt-momlapp projects.">
    <antcall target="build-jar">
      <param name="pt-projects" value="pt-moml;pt-momlapp"/>
      <param name="jar-name" value="ptolemy-moml"/>
      <param name="pt-projects-classpath" value="jars/ptolemy-core.jar"/>
    </antcall>
  </target>

  <target name="ptolemy-ptera.jar"
	  description="A jar file containing the pt-ptera project.">
    <antcall target="build-jar">
      <param name="pt-projects" value="pt-ptera"/>
      <param name="jar-name" value="ptolemy-ptera"/>
      <param name="pt-projects-classpath" value="jars/ptolemy-core.jar;jars/ptolemy-sdf.jar;jars/ptolemy-de.jar;jars/ptolemy-lib.jar;jars/ptolemy-moml.jar;jars/ptolemy-modal.jar"/>
    </antcall>
  </target>

  <target name="ptolemy-sdf.jar"
	  description="A jar file containing the pt-sdf project.">
    <antcall target="build-jar">
      <param name="pt-projects" value="pt-sdf"/>
      <param name="jar-name" value="ptolemy-sdf"/>
      <param name="pt-projects-classpath" value="jars/ptolemy-core.jar"/>
    </antcall>
  </target>

  <target name="ptolemy-sr.jar"
	  description="A jar file containing the pt-sr project.">
    <antcall target="build-jar">
      <param name="pt-projects" value="pt-sr"/>
      <param name="jar-name" value="ptolemy-sr"/>
      <param name="pt-projects-classpath" value="jars/ptolemy-core.jar;jars/ptolemy-sdf.jar"/>
    </antcall>
  </target>

  <target name="ptolemy-test.jar"
	  depends="ptolemy-core.jar"
	  description="A jar file containing the pt-test project.">
    <antcall target="build-jar">
      <param name="pt-projects" value="pt-test"/>
      <param name="jar-name" value="ptolemy-test"/>
      <param name="pt-projects-classpath" value="jars/ptolemy-core.jar;${ptPath}/lib/junit-4.8.2.jar;${ptPath}/lib/JUnitParams-0.3.0.jar;${ptPath}/lib/ptjacl.jar"/>
    </antcall>
  </target>

  <!-- The test target is the main entry point for the nightly build.
       Running "ant test" should build the jars and run the tests. -->
  <target name="test" 
	  depends="test.core"
          description="Run the tests for the modules."/>

  <!-- FIXME: Make this be more generic so that each test can call it.
       We need to pass in the dependencies, the jar files for the path and
       the tests to be run. -->
  <target name="test.core" 
	  depends="ptolemy-test.jar,ptolemy-kore-test.jar,ptolemy-core.jar"
	  description="Test ptolemy-core.jar">
    <!-- printsummary takes one of One of on, off, and withOutAndErr.  Off is the default-->
    <junit fork="yes"
	   jvm="${javachdir}"
	   printsummary="withOutAndErr"
	   showoutput="yes"
	   timeout="${timeout}">
      <classpath>
	<path refid="junit.classpath" />
	<pathelement location="jars/ptolemy-kore-test.jar"/>
	<pathelement location="jars/ptolemy-core.jar"/>
	<pathelement location="jars/ptolemy-test.jar"/>
      </classpath>
      <formatter type="${junit.formatter}" usefile="false"/>
      <jvmarg value="-Dptolemy.ptII.dir=${ptPath}" />
      <jvmarg value="-Dptolemy.ptII.batchMode=true" />
      <sysproperty key="basedir" value="${ptPath}"/>
      <test  name="ptolemy.kernel.test.junit.JUnitTclTest" />
      <test  name="ptolemy.kernel.util.test.junit.JUnitTclTest" />
    </junit>
  </target>

</project>
