[comment encoding = UTF-8 /]
[**
 * /*******************************************************************************
 * Copyright (c) 2018 FBK
 * All rights reserved. Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Contributors:
 *     Denisse MuÃ±ante (FBK) - main development
 *
 * Initially developed in the context of SUPERSEDE EU project www.supersede.eu
 *******************************************************************************/
 */]
[**
 * configurationProfileFC2Json: this module creates a json file from a feature configuration 
 * for this FC, selected leaves correspond to configuration profiles 
 * and their parents correspond to application feature to be configured 
*/]
[module configurationProfileFC2Json('http://zcu.cz/yafmt/model/fc')]
[import eu::supersede::reconfiguration::configuration2json::files::common/]

[template public generateJsonfromFC(aFeatureConfiguration : FeatureConfiguration)]
[file (aFeatureConfiguration.name.concat('.json'), false, 'UTF-8')]
[ '[' /] 
[for (oSelection : Selection | aFeatureConfiguration.root.selections)]
[ oSelection.readTreeSelection()/]
[/for]
[ ']' /]
[/file]
[/template]


[template public readTreeSelection(oSelection : Selection)post(trim())]
[if(oSelection.hasSubFeatures())]
[if(oSelection.isFeatureToConfigure())]
{
[oSelection.writeAttributesFeature()/]
"parameters":
[ '[' /] 
[for (oAttribute : AttributeValue | oSelection.selections->first().values)]
[if(not oAttribute.attribute.qualityAttribute)]{
[ oAttribute.writeConfigurationFeature()/]
}[oAttribute.writeComma()/][/if][/for][ ']' /]
}[if(not oSelection.followingSiblings()->isEmpty())],[/if]
[else]
[for (oSel : Selection | oSelection.selections)]
[oSel.readTreeSelection()/]
[/for]
[/if]
[/if]
[/template]

[template public writeAttributesFeature(oSelection : Selection)]
[for(oAttribute : AttributeValue | oSelection.values)]
"[oAttribute.id/]": "[oAttribute.attribute.defaultValue/]",
[/for]
[/template]

[template public writeConfigurationFeature(oAttribute : AttributeValue)]
"key": "[oAttribute.id/]",
"value": "[oAttribute.attribute.defaultValue/]"
[/template]