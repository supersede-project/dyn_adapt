apply plugin: "java"
apply plugin: "eclipse"
apply plugin: "idea"
//apply plugin: "org.springframework.boot"
//apply plugin: "io.spring.dependency-management"
apply plugin: "maven"
apply plugin: "maven-publish"
apply plugin: "com.jfrog.artifactory"


version = '0.0.1-SNAPSHOT'
group = "eu.supersede.dynadapt.dm"

jar {
    baseName = "integration"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

buildscript {
  /*repositories {
    jcenter()
    mavenCentral()
  }*/
  repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url "http://supersede.es.atos.net:10080/artifactory/libs-release"
            name = "maven-supersede-release"
            credentials {
                username = "${artifactory_user}"
                password = "${artifactory_password}"
            }
        }
        maven {
            url "http://supersede.es.atos.net:10080/artifactory/libs-snapshot"
            name = "maven-supersede-snapshot"
            credentials {
                username = "${artifactory_user}"
                password = "${artifactory_password}"
            }
        }
    }
  dependencies {
  	
  	classpath("io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE")
    //classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.7.RELEASE")
    classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.4.0"
  }
}

repositories {
    mavenCentral()
    add buildscript.repositories.getByName ("maven-supersede-snapshot")
    add buildscript.repositories.getByName ("maven-supersede-release")   
}

allprojects {
    apply plugin: "com.jfrog.artifactory"
}

dependencies {

	testCompile 'junit:junit:4.12'
    compile(group: 'eu.supersede.if', name: 'eu.supersede.if.api', version: '0.3.0-SNAPSHOT', changing: true)   
    compile("com.google.code.gson:gson:2.8.0")
	
}

configurations.all {
	//Avoids conflict: SL4J Multiple bindings were found on the class path 
	exclude group: "org.slf4j", module: "slf4j-log4j12"
}

// Artifactory configuration to publish built jars
artifactory {
    contextUrl = "${artifactory_contextUrl}"   //The base Artifactory URL if not overridden by the publisher/resolver
    String repo = version.endsWith('SNAPSHOT') ? 'libs-snapshot-local' : 'libs-release-local'
    publish {
        repository {
            repoKey = repo
	    	username = "${artifactory_user}"
	    	password = "${artifactory_password}"
            maven = true
        }
		defaults {
	   	    publications ('mavenJava')
		}
    }
    resolve {
        repository {
            repoKey = 'libs-snapshot'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
        }
    }
}

artifactoryPublish {
  dependsOn jar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}