/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'yosu' at '5/3/16 2:34 PM' with Gradle 2.9
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.9/userguide/tutorial_java_projects.html
 */

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "${artifactory_contextUrl}/libs-snapshot"
            name = 'maven-supersede-snapshot'
            credentials {
                username = "${artifactory_user}"
                password = "${artifactory_password}"
            }
        }
        maven {
            url "${artifactory_contextUrl}/libs-release"
            name = 'maven-supersede-release'
            credentials {
                username = "${artifactory_user}"
                password = "${artifactory_password}"
            }
        }

    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.2.RELEASE")
        //Check for the latest version here: http://plugins.gradle.org/plugin/com.jfrog.artifactory
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4+"
    }
}

// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    //jcenter()
    mavenCentral()
    add buildscript.repositories.getByName ("maven-supersede-snapshot")
    add buildscript.repositories.getByName ("maven-supersede-release")
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    //compile 'org.slf4j:slf4j-api:1.7.13'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'

    compile("eu.supersede.if:eu.supersede.if.api:0.4.0-SNAPSHOT"){
        changing = true
    }


     //exclude (group: 'com.fasterxml.jackson.core')
	//compile ('eu.supersede.dynadapt.modelrepository:1.0.0-SNAPSHOT')
	
    compile 'com.google.guava:guava:21.0'
    compile 'com.google.code.gson:gson:2.8.0'

    compile files ('./lib/andes-client-3.1.1.jar')
    compile files ('./lib/geronimo-jms_1.1_spec-1.1.0.wso2v1.jar')
    compile files ('./lib/org.wso2.carbon.logging-4.4.1.jar')
    compile files ('./lib/org.wso2.securevault-1.0.0-wso2v2.jar')
}

configurations.all {
    //Avoids conflict: SL4J Multiple bindings were found on the class path
    //exclude group: "org.slf4j", module: "log4j-over-slf4j"
    exclude group: "org.slf4j", module: "slf4j-log4j12"
    // check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
}

dependencies {
    runtime files('src/main/resources')
}


task wrapper(type: Wrapper) {
    gradleVersion = '2.8'
}

// Test execution JVM properties
tasks.withType(Test){
    //systemProperty 'is.admin.user', System.getProperty ('is.admin.user', 'admin@atos.supersede.eu')
    //systemProperty 'is.admin.passwd', System.getProperty ('is.admin.passwd', 'rtgWCyrc')
    //systemProperty 'supersede.if.properties', System.getProperty ('supersede.if.properties', 'if.properties')
    
    systemProperty 'is.admin.user', System.getProperty ('is.admin.user', 'admin')
    systemProperty 'is.admin.passwd', System.getProperty ('is.admin.passwd', '$2pRSid#')
    systemProperty 'supersede.if.properties', System.getProperty ('supersede.if.properties', 'if.development.properties')
    
}

// Test execution filter
test {
    filter {
        includeTestsMatching "*MailProxyTest"
        includeTestsMatching "*FEDataStoreProxyTest"
        includeTestsMatching "*IFAuthenticationManagerTest"
    }
}
